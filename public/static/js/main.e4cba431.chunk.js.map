{"version":3,"sources":["store/utility.tsx","store/actionTypes/auth.tsx","store/reducers/auth.tsx","config/settings.ts","store/context/auth.tsx","components/loggedin/components/sidebar/SideBar.tsx","store/actionTypes/send.tsx","store/reducers/send.tsx","store/context/send.tsx","components/loggedin/components/dashboard/components/send/selectMethod.tsx","store/actionTypes/deposit.tsx","store/reducers/deposit.tsx","store/context/deposit.tsx","components/loggedin/components/dashboard/components/deposit/CreditCard.tsx","store/actionTypes/beneficiary.tsx","store/reducers/beneficiary.tsx","store/context/beneficiary.tsx","components/loggedin/components/dashboard/components/beneficiary/beneficiary_create.tsx","components/shared/countries/countries.tsx","components/loggedin/components/dashboard/components/deposit/DepositDetails.tsx","components/loggedin/components/dashboard/components/beneficiary/beneficiary_list.tsx","components/loggedin/components/dashboard/components/transactions/transactions.tsx","components/loggedin/components/dashboard/dashboard.tsx","components/loggedin/components/settings/settings.tsx","components/loggedin/components/statistics/statistics.tsx","components/loggedin/components/transactions/transactions.tsx","components/shared/copyright/Copyright.tsx","components/loggedin/main.tsx","components/loggedout/components/auth/login/login.tsx","store/actionTypes/register.tsx","store/reducers/register.tsx","store/context/register.tsx","components/loggedout/components/auth/signup/components/signup.tsx","components/loggedout/components/auth/signup/components/phone.tsx","components/loggedout/components/auth/signup/components/phone_confirm.tsx","components/loggedout/components/auth/signup/components/wallet_create.tsx","components/loggedout/components/auth/signup/components/email_confirm.tsx","components/loggedout/components/auth/signup/register.tsx","components/loggedout/components/home/home.tsx","components/loggedout/main.tsx","App.tsx","index.tsx"],"names":["updateObject","oldObject","updatedProperties","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","initialState","token","email","error","loading","reducer","state","action","type","actionTypes","authStart","authSuccess","authFail","authLogout","LOGIN_URL","REGISTER_URL","HOST_URL","BASE_URL","AuthContext","createContext","AuthContextProvider","props","useReducer","auth","authDispatch","logout","localStorage","removeItem","axios","post","then","res","catch","err","Provider","value","login","password","data","setItem","message","authCheckState","JSON","stringify","getItem","undefined","getCsrfCookie","get","children","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","MiniDrawer","useTheme","React","setOpen","history","useHistory","url","useRouteMatch","Box","CssBaseline","position","color","Toolbar","IconButton","aria-label","onClick","edge","sx","marginRight","flexGrow","variant","direction","Divider","List","ListItem","button","push","ListItemIcon","ListItemText","primary","window","location","reload","SEND_START","SEND_SUCCESS","SEND_FAIL","success","sendStart","sendFail","sendSuccess","SendContext","SendContextProvider","send","sendDispatch","sendWallet","id","amount","config","headers","Authorization","phone_number","console","log","validationSchema","yup","required","min","mobile","when","is","phone","beneficiary","withCredentials","fetcher","SelectMethod","useSwr","useContext","formik","useFormik","initialValues","onSubmit","values","enqueueSnackbar","useSnackbar","useEffect","errors","Object","parse","i","length","Paper","maxWidth","marginX","flexDirection","Avatar","background","Typography","handleSubmit","TextField","margin","fullWidth","label","name","onChange","handleChange","touched","Boolean","helperText","FormControl","InputLabel","Select","labelId","MenuItem","beneficiaries","map","first_name","last_name","placeholder","Button","disabled","LinearProgress","DEPOSIT_START","DEPOSIT_SUCCESS","DEPOSIT_FAIL","DEPOSIT_CARD_SUCCESS","cardNo","expiry","ccv","step","depositStart","depositCardSuccess","depositFail","depositSuccess","DepositContext","DepositContextProvider","deposit","depositDispatch","insertCard","makeDeposit","number","expiration_month","expiration_year","total_amount","security_code","address2","address1","postal_code","locality","administrative_area","country","response","CreditCard","cardTypeRef","useRef","className","htmlFor","options","creditCard","delimiter","onCreditCardTypeChanged","current","setAttribute","src","alt","date","datePattern","blocks","numericOnly","ref","marginTop","BENEFICIARY_START","BENEFICIARY_SUCCESS","BENEFICIARY_FAIL","beneficiaryStart","beneficiarySuccess","beneficiaryFail","BeneficiaryContext","BeneficiaryContextProvider","beneficiaryDispatch","Beneficiary","endIcon","countries","code","suggested","state_province_region","city_town_village","address_line_2","address_line_1","default","DepositDetails","parseInt","replaceAll","split","inputValue","useState","setValue","setInputValue","go","FormControlLabel","hidden","control","Checkbox","Autocomplete","autoHighlight","getOptionLabel","option","event","newValue","onInputChange","newInputValue","renderOption","component","mr","toLowerCase","srcSet","renderInput","params","inputProps","autoComplete","BeneficiaryList","bgcolor","secondary","Fragment","Transactions","my_transactions","transaction","ListItemAvatar","status","style","top","left","transform","border","boxShadow","p","maxHeight","overflow","Dashboard","wallet_data","openDeposit","setOpenDeposit","openSend","setSendOpen","openBeneficiary","setBeneficiaryOpen","Grid","container","item","xs","md","Card","CardContent","gutterBottom","balance","CardActions","size","Fab","bottom","right","minHeight","Modal","onClose","aria-labelledby","aria-describedby","Settings","Statistics","Copyright","align","Link","href","Date","getFullYear","Main","path","exact","Login","height","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAIL","PHONE_PENDING","PHONE_CONFIRMED","WALLET_CREATED","phone_confirmed","wallet_created","registerStart","phonePending","registerFail","phoneConfirmed","signUpSuccess","walletCreated","RegisterContext","RegisterContextProvider","register","registerDispatch","phoneValidate","defaults","xsrfHeaderName","signup","password_confirmation","phone_number1","create_wallet","nationality","state_pronvince_region","date_of_birth","phoneConfirmationCode","max","matches","confirm_password","oneOf","Signup","PhoneConfirm","onBlur","handleBlur","terms","WalletCreate","FormGroup","EmailConfirm","StepConnector","stepConnectorClasses","alternativeLabel","active","line","borderColor","completed","palette","mode","grey","borderTopWidth","borderRadius","ownerState","fontSize","backgroundColor","ColorlibConnector","backgroundImage","ColorlibStepIconRoot","ColorlibStepIcon","icons","1","2","3","String","icon","Header","steps","Register","paddingBottom","Phone","SignUp","Stack","Stepper","activeStep","connector","Step","StepLabel","StepIconComponent","Home","checked","setChecked","fontFamily","fontStyle","fontWeight","ExpandMore","m","backgroundPosition","backgroundSize","backgroundRepeat","pl","float","Collapse","in","timeout","py","paddingTop","elevation","px","pt","mx","CardActionArea","CardMedia","image","App","themeMui","createTheme","main","ThemeProvider","to","ReactDOM","render","StrictMode","maxSnack","document","getElementById"],"mappings":"wMAAaA,EAAe,SAACC,EAAgBC,GACzC,OAAO,2BACAD,GACAC,ICFEC,EAAa,aACbC,EAAe,eACfC,EAAY,YACZC,EAAc,cCAdC,EAAsB,CAC/BC,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,SAAS,GAsDEC,EAfC,SAACC,EAAcC,GAC3B,OAAQA,EAAOC,MACX,KAAKC,EACD,OAvCM,SAACH,EAAcC,GAC7B,OAAOd,EAAaa,EAAO,CACvBH,MAAO,KACPC,SAAS,EACTH,MAAO,KACPC,MAAO,OAkCIQ,CAAUJ,GACrB,KAAKG,EACD,OAhCQ,SAACH,EAAcC,GAC/B,OAAOd,EAAaa,EAAO,CACvBH,MAAO,KACPF,MAAOM,EAAON,MACdC,MAAOK,EAAOL,MACdE,SAAS,IA2BEO,CAAYL,EAAOC,GAC9B,KAAKE,EACD,OAzBK,SAACH,EAAcC,GAC5B,OAAOd,EAAaa,EAAO,CACvBH,MAAOI,EAAOJ,MACdC,SAAS,EACTH,MAAO,KACPC,MAAO,OAoBIU,CAASN,EAAOC,GAC3B,KAAKE,EACD,OAlBO,SAACH,EAAcC,GAC9B,OAAOd,EAAaa,EAAO,CACvBL,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,SAAS,IAaES,CAAWP,GACtB,QACI,OAAOA,I,iBCzDfQ,EAAoB,yCACpBC,EAAuB,4CACvBC,EAAmB,oCAEnBC,EAAW,gC,WCEFC,EAAcC,wBAA2BnB,GAkGvCoB,EAhGa,SAACC,GAA6B,IAAD,EAExBC,qBAAWjB,EAASL,GAFI,mBAE9CuB,EAF8C,KAExCC,EAFwC,KAI/Cd,EAAY,WACd,MAAO,CACHF,KAAMC,EACNN,MAAO,KACPF,MAAO,KACPC,MAAO,OAITS,EAAc,SAACT,EAAeD,GAChC,MAAO,CACHO,KAAMC,EACNR,MAAOA,EACPC,MAAOA,EACPC,MAAO,OAITS,EAAW,SAACT,GACd,MAAO,CACHK,KAAMC,EACNN,MAAOA,EACPD,MAAO,KACPD,MAAO,OAyBTwB,EAAS,WAYX,OAVAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBAExBC,IAAMC,KAAN,UAAcf,IAAagB,MAAK,SAAAC,OAE7BC,OAAM,SAAAC,GACLT,EAAaZ,EAAS,wBAGnB,CACHJ,KAAMC,EACNP,MAAO,KACPC,MAAO,KACPF,MAAO,OAqBf,OACI,cAACiB,EAAYgB,SAAb,CAAsBC,MAAO,CAAEZ,OAAMa,MA3D3B,SAAClC,EAAemC,GAC1Bb,EAAad,KAIbkB,IAAMC,KAAN,UAAcf,GAAa,CACvBZ,MAAOA,EACPmC,SAAUA,IACXP,MAAK,SAAAC,GACJ,IAAM9B,EAAQ8B,EAAIO,KAAKrC,MACnB8B,EAAIO,KAAKrC,OACTyB,aAAaa,QAAQ,QAAStC,GAC9ByB,aAAaa,QAAQ,QAASrC,GAC9BsB,EAAab,EAAYT,EAAOD,KAEhCuB,EAAaZ,EAASmB,EAAIO,KAAKE,aAEpCR,OAAM,SAAAC,GACLT,EAAaZ,EAASqB,QAyCkBR,SAAQgB,eAZjC,WACnBjB,EAAad,KACb,IAAMT,EAAgByC,KAAKC,UAAUjB,aAAakB,QAAQ,UACpD1C,EAAgBwC,KAAKC,UAAUjB,aAAakB,QAAQ,UAEtDpB,OADUqB,IAAV5C,EACawB,IAEAd,EAAYT,EAAOD,KAKgC6C,cAlBlD,WAClBlB,IAAMmB,IAAN,UAAa9B,EAAb,wBAA4Ca,MAAK,SAAAC,SAiBjD,SACKV,EAAM2B,Y,oOChFbC,EAAc,IAEdC,GAAc,SAACC,GAAD,MAA8B,CAChDC,MAAOH,EACPI,WAAYF,EAAMG,YAAYC,OAAO,QAAS,CAC5CC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,iBAEvCC,UAAW,WAGPC,GAAc,SAACV,GAAD,oBAClBE,WAAYF,EAAMG,YAAYC,OAAO,QAAS,CAC5CC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASI,gBAEvCF,UAAW,SACXR,MAAM,QAAD,OAAUD,EAAMY,QAAQ,GAAxB,YACJZ,EAAMa,YAAYC,GAAG,MAAQ,CAC5Bb,MAAM,QAAD,OAAUD,EAAMY,QAAQ,GAAxB,cAIHG,GAAeC,YAAO,MAAPA,EAAc,gBAAGhB,EAAH,EAAGA,MAAH,oBACjCiB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,QAASpB,EAAMY,QAAQ,EAAG,IAEvBZ,EAAMqB,OAAOC,YAOZC,GAASP,YAAOQ,IAAW,CAC/BC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IADhBV,EAEC,gBAAGhB,EAAH,EAAGA,MAAO2B,EAAV,EAAUA,KAAV,oBACdC,OAAQ5B,EAAM4B,OAAOC,OAAS,EAC9B3B,WAAYF,EAAMG,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASI,iBAEnCgB,GAAQ,CACVG,WAAYhC,EACZG,MAAM,eAAD,OAAiBH,EAAjB,OACLI,WAAYF,EAAMG,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,sBAKrCuB,GAASf,YAAOgB,IAAW,CAAEP,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAAjDV,EACb,gBAAGhB,EAAH,EAAGA,MAAO2B,EAAV,EAAUA,KAAV,mBAAC,aACC1B,MAAOH,EACPmC,WAAY,EACZC,WAAY,SACZC,UAAW,cACPR,GAAI,2BACH5B,GAAYC,IADT,IAEN,qBAAsBD,GAAYC,OAE/B2B,GAAD,2BACCjB,GAAYV,IADb,IAEF,qBAAsBU,GAAYV,SAKzB,SAASoC,KACtB,IAAMpC,EAAQqC,cADqB,EAEXC,YAAe,GAFJ,mBAE5BX,EAF4B,KAEtBY,EAFsB,KAG7BC,EAAUC,cAQVC,EAAQC,cAARD,IACEpE,EAAWgE,aAAiBvE,GAA5BO,OACR,OACE,eAACsE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC,GAAD,CAAQC,SAAS,QAAQnB,KAAMA,EAAMoB,MAAM,UAA3C,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEF,MAAM,UACNG,aAAW,cACXC,QAjBe,WACvBZ,GAAQ,IAiBAa,KAAK,QACLC,GAAE,aACAC,YAAa,QACT3B,GAAQ,CAAEV,QAAS,SAP3B,SAUE,cAAC,IAAD,MAEF,cAAC2B,EAAA,EAAD,CAAKS,GAAI,CAAEE,SAAU,UAyBzB,eAAC,GAAD,CAAQC,QAAQ,YAAY7B,KAAMA,EAAlC,UACE,cAACZ,GAAD,UACE,cAACkC,EAAA,EAAD,CAAYE,QAjDM,WACxBZ,GAAQ,IAgDF,SACuB,QAApBvC,EAAMyD,UAAsB,cAAC,IAAD,IAAuB,cAAC,IAAD,QAGxD,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACV,QAAS,WAAQX,EAAQsB,KAAKpB,IAA/C,UACE,cAACqB,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAqBxB,eAACL,EAAA,EAAD,CAAUC,QAAM,EAACV,QAAS,WACxB7E,IACAkE,EAAQsB,KAAK,KACbI,OAAOC,SAASC,UAHlB,UAKE,cAACL,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uB,8NC1LrBI,I,OAAa,cACbC,GAAe,eACfC,GAAY,YCCZ1H,GAAsB,CAC/BG,MAAO,KACPwH,QAAS,KACTvH,SAAS,GAqCEC,GAbC,SAACC,EAAcC,GAC3B,OAAQA,EAAOC,MACX,KAAKC,GACD,OAxBM,SAACH,EAAcC,GAC7B,OAAOd,EAAaa,EAAO,CACvBF,SAAS,IAsBEwH,CAAUtH,GACrB,KAAKG,GACD,OAbK,SAACH,EAAcC,GAC5B,OAAOd,EAAaa,EAAO,CACvBH,MAAOI,EAAOJ,MACdC,SAAS,EACTuH,QAAS,OASEE,CAASvH,EAAOC,GAC3B,KAAKE,GACD,OAvBQ,SAACH,EAAcC,GAC/B,OAAOd,EAAaa,EAAO,CACvBqH,QAASpH,EAAOoH,QAChBvH,SAAS,EACTD,MAAO,OAmBI2H,CAAYxH,EAAOC,GAC9B,QACI,OAAOD,ICjCNyH,GAAc5G,wBAA2BnB,IA6DvCgI,GA3Da,SAAC3G,GAA6B,IAAD,EAExBC,qBAAWjB,GAASL,IAFI,mBAE9CiI,EAF8C,KAExCC,EAFwC,KAY/CL,EAAW,SAAC1H,GACd,MAAO,CACHK,KAAMC,GACNN,MAAOA,EACPwH,QAAS,OAoCjB,OACI,cAACI,GAAY7F,SAAb,CAAsBC,MAAO,CAAE8F,OAAME,WAzBtB,SAACC,EAAYC,GAC5BH,EAxBO,CACH1H,KAAMC,GACNN,MAAO,KACPwH,QAAS,OAuBb,IAAM1H,EAAQyB,aAAakB,QAAQ,SACnC,GAAI3C,EAAO,CACP,IAAMqI,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KAExC2B,IAAMC,KAAN,UAAcb,EAAd,oBAA0C,CACtCyH,aAAcL,EACdC,UACDC,GACExG,MAAK,SAAAC,GACF2G,QAAQC,IAAI5G,GACZmG,EArBL,CACH1H,KAAMC,GACNN,MAAO,KACPwH,QAkBiC,gCAE5B3F,OAAM,SAAAC,GACHyG,QAAQC,IAAI1G,GACZiG,EAAaL,EAAS,iCAG9BK,EAAaL,EAAS,qCAI1B,SACKxG,EAAM2B,Y,SCnDb4F,GAAmBC,UAAW,CAChCR,OAAQQ,YAEHC,SAAS,sBACdtI,KAAMqI,YAEDE,IAAI,EAAG,+BACPD,SAAS,oBACdE,OAAQH,YAEHI,KAAK,OAAQ,CACVC,GAAI,SACJpH,KAAM+G,YAAaM,UAE3BC,YAAaP,YAERI,KAAK,OAAQ,CACVC,GAAI,cACJpH,KAAM+G,gBAGZ5I,GAAQyB,aAAakB,QAAQ,SAC7B0F,GAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KACpCoJ,iBAAiB,GAEfC,GAAU,SAACzD,GAAD,OAAiBjE,IAAMmB,IAAI8C,EAAKyC,IAAQxG,MAAK,SAAAC,GAAG,OAAIA,EAAIO,SACzD,SAASiH,KAAgB,IAC5BjH,EAASkH,aAAO,GAAD,OAAIxI,EAAJ,sBAAkCsI,IAAjDhH,KAD2B,EAENmH,qBAAW1B,IAAhCE,EAF2B,EAE3BA,KAAME,EAFqB,EAErBA,WACRuB,EAASC,aAAU,CACrBC,cAAe,CACXvB,OAAQ,GACR7H,KAAM,GACNwI,OAAQ,GACRI,YAAa,IAEjBR,iBAAkBA,GAClBiB,SAAU,SAACC,GACa,gBAAhBA,EAAOtJ,MACP2H,EAAW2B,EAAOV,YAAaU,EAAOzB,WAI5C1C,EAAUC,cACRmE,EAAoBC,eAApBD,gBAwBR,OAvBAE,qBAAU,WAON,GANIhC,EAAKN,UACLoC,EAAgB9B,EAAKN,QAAS,CAC1BhB,QAAS,YAEbhB,EAAQsB,KAAK,aAEbgB,EAAK9H,MACL,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAMnC,EAAK9H,QACvCkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgB9B,EAAK9H,MAAO,CACxBwG,QAAS,aAItB,CAACsB,IACJS,QAAQC,IAAIrG,GAER,cAACyD,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CAAYlE,QAAQ,KAApB,wBAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,SACH8C,MAAM,SACNC,KAAK,SACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOzB,OACrB+C,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQjD,QAAUkD,QAAQ7B,EAAOQ,OAAO7B,QACtDmD,WAAY9B,EAAO4B,QAAQjD,QAAUqB,EAAOQ,OAAO7B,SAEvD,eAACoD,GAAA,EAAD,CACIR,WAAS,EACTD,OAAO,SAFX,UAII,cAACU,GAAA,EAAD,CAAYtD,GAAG,aAAf,kBACA,eAACuD,GAAA,EAAD,CACIC,QAAQ,aACRxD,GAAG,OACH+C,KAAK,OACLD,MAAM,OACN/I,MAAOuH,EAAOI,OAAOtJ,KACrB4K,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ9K,MAAQ+K,QAAQ7B,EAAOQ,OAAO1J,MAPxD,UASI,cAACqL,GAAA,EAAD,CAAU1J,MAAM,cAAhB,yBACA,cAAC0J,GAAA,EAAD,CAAU1J,MAAM,SAAhB,iCAGgB,gBAAvBuH,EAAOI,OAAOtJ,MACX,eAACiL,GAAA,EAAD,CACIR,WAAS,EACTD,OAAO,SAFX,UAII,cAACU,GAAA,EAAD,CAAYtD,GAAG,oBAAf,gCACA,cAACuD,GAAA,EAAD,CACIC,QAAQ,oBACRxD,GAAG,cACH+C,KAAK,cACLD,MAAM,cACN/I,MAAOuH,EAAOI,OAAOV,YACrBgC,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQlC,aAAemC,QAAQ7B,EAAOQ,OAAOd,aAP/D,SASK9G,GAAQA,EAAKwJ,cAAcC,KAAI,SAAC3C,GAC7B,OACI,cAACyC,GAAA,EAAD,CAAyC1J,MAAOiH,EAAYhB,GAA5D,SAAiEgB,EAAY4C,WAAa,IAAM5C,EAAY6C,WAA7F7C,EAAYX,sBAMvB,WAAvBiB,EAAOI,OAAOtJ,MACX,cAACuK,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPC,WAAS,EACT7C,GAAG,SACH8C,MAAM,YACNgB,YAAY,qBACZf,KAAK,SACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOd,OACrBoC,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQtC,QAAUuC,QAAQ7B,EAAOQ,OAAOlB,QACtDwC,WAAY9B,EAAO4B,QAAQtC,QAAUU,EAAOQ,OAAOlB,SAI3D,cAACmD,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACNkG,SAAUnE,EAAK7H,QALnB,kBASC6H,EAAK7H,SACF,cAACiM,GAAA,EAAD,c,gCC5LfC,GAAgB,gBAChBC,GAAkB,kBAClBC,GAAe,eACfC,GAAuB,uBCAvBzM,GAAyB,CAClC0M,OAAQ,KACRC,OAAQ,KACRC,IAAK,KACLC,KAAM,EACN1M,MAAO,KACPwH,QAAS,KACTvH,SAAS,GAkDEC,GAfC,SAACC,EAAiBC,GAC9B,OAAQA,EAAOC,MACX,KAAKC,GACD,OAnCS,SAACH,EAAiBC,GACnC,OAAOd,EAAaa,EAAO,CACvBF,SAAS,IAiCE0M,CAAaxM,GACxB,KAAKG,GACD,OA/Be,SAACH,EAAiBC,GACzC,OAAOd,EAAaa,EAAO,CACvBqH,QAASpH,EAAOoH,QAChBvH,SAAS,EACTsM,OAAQnM,EAAOmM,OACfC,OAAQpM,EAAOoM,OACfE,KAAMtM,EAAOsM,KACbD,IAAKrM,EAAOqM,MAwBDG,CAAmBzM,EAAOC,GACrC,KAAKE,GACD,OAfQ,SAACH,EAAiBC,GAClC,OAAOd,EAAaa,EAAO,CACvBH,MAAOI,EAAOJ,MACdC,SAAS,EACTuH,QAAS,OAWEqF,CAAY1M,EAAOC,GAC9B,KAAKE,GACD,OAzBW,SAACH,EAAiBC,GACrC,OAAOd,EAAaa,EAAO,CACvBqH,QAASpH,EAAOoH,QAChBvH,SAAS,EACTD,MAAO,OAqBI8M,CAAe3M,EAAOC,GACjC,QACI,OAAOD,IClDN4M,GAAiB/L,wBAA8BnB,IAwH7CmN,GAtHgB,SAAC9L,GAA6B,IAAD,EAErBC,qBAAWjB,GAASL,IAFC,mBAEjDoN,EAFiD,KAExCC,EAFwC,KAIlDP,EAAe,WACjB,MAAO,CACHtM,KAAMC,GACNN,MAAO,KACPuM,OAAQ,KACRC,OAAQ,KACRC,IAAK,KACLC,KAAM,EACNlF,QAAS,OAgBXqF,EAAc,SAAC7M,GACjB,MAAO,CACHK,KAAMC,GACNN,MAAOA,EACPuM,OAAQ,KACRC,OAAQ,KACRC,IAAK,KACLC,KAAM,EACNlF,QAAS,OA2EjB,OACI,cAACuF,GAAehL,SAAhB,CAAyBC,MAAO,CAAEiL,UAASE,WA5D5B,SAACZ,EAAgBC,EAAgBC,GAChDS,EAAgBP,KAChBO,EAtCuB,SAACX,EAAgBC,EAAgBE,EAAcD,EAAajF,GACnF,MAAO,CACHnH,KAAMC,GACNN,MAAO,KACPuM,SACAC,SACAC,MACAC,OACAlF,WA8BYoF,CAAmBL,EAAQC,EAAQ,EAAGC,EAAK,+BA0DJW,YAvDvC,SAChBC,EACAC,EACAC,EACAC,EACAC,EACA5B,EACAC,EACA4B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAhO,GAEAmN,EAAgBP,KAChB,IAAM7M,EAAQyB,aAAakB,QAAQ,SAEnC,GAAI3C,EAAO,CACP,IAAMqI,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KAExC2B,IAAMC,KAAN,UAAcb,EAAd,WAAiC,CAC7BwM,SACAC,mBACAC,kBACAC,eACAC,gBACA5B,aACAC,YACA4B,WACAC,WACAC,cACAC,WACAC,sBACAC,UACAhO,SACDoI,GAAQxG,MAAK,SAAAC,GACZ2G,QAAQC,IAAI5G,GACZsL,EAxDD,CACH7M,KAAMC,GACNN,MAAO,KACPuM,OAAQ,KACRC,OAAQ,KACRC,IAAK,KACLC,KAAM,EACNlF,QAiDmC,kCAChC3F,OAAM,SAAAC,GACLyG,QAAQC,IAAI1G,GACRA,EAAIkM,SAAS7L,KAAK4H,OAClBmD,EAAgBL,EAAYtK,KAAKC,UAAUV,EAAIkM,SAAS7L,KAAK4H,UAE7DmD,EAAgBL,EAAY,2BAIpCK,EAAgBL,EAAY,qCAKhC,SACK3L,EAAM2B,YChHb4F,GAAmBC,UAAW,CAChC6D,OAAQ7D,YAEHC,SAAS,2BACd6D,OAAQ9D,YAEHC,SAAS,sBACd8D,IAAK/D,YAEAC,SAAS,8BAEH,SAASsF,KAAa,MAED3E,qBAAWyD,IAAnCE,EAFyB,EAEzBA,QAASE,EAFgB,EAEhBA,WAGXe,GAFsBrE,eAApBD,gBACQnE,cACI0I,oBACd5E,EAASC,aAAU,CACrBC,cAAe,CACX8C,OAAQ,GACRC,OAAQ,GACRC,IAAK,IAEThE,iBAAkBA,GAClBiB,SAAU,SAACC,GACPwD,EAAWxD,EAAO4C,OAAQ5C,EAAO6C,OAAQ7C,EAAO8C,QAGxD,OACI,cAAC7G,EAAA,EAAD,UACI,uBAAM8D,SAAUH,EAAOoB,aAAvB,UACI,cAAC/E,EAAA,EAAD,CAAKwI,UAAU,OAAf,SACI,eAACxI,EAAA,EAAD,CAAKwI,UAAU,OAAf,UAEI,oBAAIA,UAAU,cAAd,uCACA,eAACxI,EAAA,EAAD,CAAKwI,UAAU,YAAf,UACI,eAACxI,EAAA,EAAD,CAAKwI,UAAU,YAAf,UACI,uBAAOC,QAAQ,aAAaD,UAAU,cAAtC,yBACC,cAAC,KAAD,CACGE,QAAS,CACLC,YAAY,EACZC,UAAW,IACXC,wBAAyB,SAACpO,GAQtB,OAAQA,GACJ,IAAK,OACD6N,EAAYQ,QAAQC,aAAa,QAT5B,kBAUL,MACJ,IAAK,aACDT,EAAYQ,QAAQC,aAAa,QAXtB,wBAYX,MACJ,IAAK,OACDT,EAAYQ,QAAQC,aAAa,QAb5B,kBAcL,MACJ,IAAK,SACDT,EAAYQ,QAAQC,aAAa,QAf1B,yBAgBP,MACJ,IAAK,MACDT,EAAYQ,QAAQC,aAAa,QAjB7B,iBAkBJ,MACJ,IAAK,WACDT,EAAYQ,QAAQC,aAAa,QAnBxB,sBAoBT,MACJ,QACIT,EAAYQ,QAAQC,aAAa,QAAS,OAK1DtO,KAAK,OACL+N,UAAU,iCACVnG,GAAG,SACH+C,KAAK,SACLe,YAAY,sBACZ/J,MAAOuH,EAAOI,OAAO4C,OACrBtB,SAAU1B,EAAO2B,kBAKzB,cAACtF,EAAA,EAAD,CAAKwI,UAAU,uBAAf,SACI,qBAAKQ,IAAI,mBAAmBC,IAAI,cAGxC,eAACjJ,EAAA,EAAD,CAAKwI,UAAU,YAAf,UACI,eAACxI,EAAA,EAAD,CAAKwI,UAAU,YAAf,UACI,uBAAOC,QAAQ,aAAaD,UAAU,cAAtC,yBACC,cAAC,KAAD,CACGE,QAAS,CACLQ,MAAM,EACNC,YAAa,CAAC,IAAK,MAEvB1O,KAAK,OACL+N,UAAU,cACVnG,GAAG,aACH+C,KAAK,SACLe,YAAY,QACZ/J,MAAOuH,EAAOI,OAAO6C,OACrBvB,SAAU1B,EAAO2B,kBAKzB,eAACtF,EAAA,EAAD,CAAKwI,UAAU,YAAf,UACI,uBAAOC,QAAQ,UAAUD,UAAU,cAAnC,iBACC,cAAC,KAAD,CACGE,QAAS,CACLU,OAAQ,CAAC,GACTC,aAAa,GAEjB5O,KAAK,OACL+N,UAAU,cACVnG,GAAG,MACH+C,KAAK,MACLe,YAAY,MACZ/J,MAAOuH,EAAOI,OAAO8C,IACrBxB,SAAU1B,EAAO2B,kBAKzB,cAACtF,EAAA,EAAD,CAAKwI,UAAU,wBAAf,SAAuC,mBAAGc,IAAKhB,EAAajG,GAAG,wBAM3E,cAAC+D,GAAA,EAAD,CACI3L,KAAK,SACLmG,QAAQ,YACRsE,WAAS,EACTzE,GAAI,CACAN,MAAO,QACPuE,QAAS,OACT6E,UAAW,IAEflD,SAAUgB,EAAQhN,QATtB,kBAaCgN,EAAQhN,SACL,cAACiM,GAAA,EAAD,S,yBC5JPkD,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAmB,mBCCnBzP,GAA6B,CACtCG,MAAO,KACPwH,QAAS,KACTvH,SAAS,GAwCEC,GAbC,SAACC,EAAqBC,GAClC,OAAQA,EAAOC,MACX,KAAKC,GACD,OA3Ba,SAACH,EAAqBC,GAC3C,OAAOd,EAAaa,EAAO,CACvBF,SAAS,EACTD,MAAO,KACPwH,QAAS,OAuBE+H,CAAiBpP,GAC5B,KAAKG,GACD,OArBe,SAACH,EAAqBC,GAC7C,OAAOd,EAAaa,EAAO,CACvBqH,QAASpH,EAAOoH,QAChBvH,SAAS,EACTD,MAAO,OAiBIwP,CAAmBrP,EAAOC,GACrC,KAAKE,GACD,OAfY,SAACH,EAAqBC,GAC1C,OAAOd,EAAaa,EAAO,CACvBH,MAAOI,EAAOJ,MACdC,SAAS,EACTuH,QAAS,OAWEiI,CAAgBtP,EAAOC,GAClC,QACI,OAAOD,ICpCNuP,GAAqB1O,wBAAkCnB,IA+DrD8P,GA7DoB,SAACzO,GAA6B,IAAD,EAEjBC,qBAAWjB,GAASL,IAFH,mBAErDoJ,EAFqD,KAExC2G,EAFwC,KAoBtDH,EAAkB,SAACzP,GACrB,MAAO,CACHK,KAAMC,GACNN,MAAOA,EACPwH,QAAS,OA8BjB,OACI,cAACkI,GAAmB3N,SAApB,CAA6BC,MAAO,CAAEiH,cAAa7F,OA3BxC,SAAC4F,EAAe6C,EAAoBC,GAC/C8D,EAxBO,CACHvP,KAAMC,GACNN,MAAO,KACPwH,QAAS,OAuBb,IAAM1H,EAAQyB,aAAakB,QAAQ,SACnC,GAAI3C,EAAO,CACP,IAAMqI,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KAExC2B,IAAMC,KAAN,UAAcb,EAAd,sBAA4C,CACxCgL,aACAC,YACAxD,aAAaU,GACdb,GAAQxG,MAAK,SAAAC,GACZgO,EA5BD,CACHvP,KAAMC,GACNN,MAAO,KACPwH,QAyB2C,sCACxC3F,OAAM,SAAAC,GACDA,EAAIkM,SAAS7L,KAAK4H,OAClB6F,EAAoBH,EAAgBlN,KAAKC,UAAUV,EAAIkM,SAAS7L,KAAK4H,UAErE6F,EAAoBH,EAAgB,6CAI5CG,EAAoBH,EAAgB,qCAKxC,SACKvO,EAAM2B,Y,qBCtDb4F,GAAmBC,UAAW,CAChCM,MAAON,YAEFM,QACAL,SAAS,qBACdkD,WAAYnD,YAEPE,IAAI,EAAG,+BACPD,SAAS,qBACdmD,UAAWpD,YAENE,IAAI,EAAG,+BACPD,SAAS,uBAEH,SAASkH,KAAe,IAAD,EACFvG,qBAAWoG,IAAnCzG,EAD0B,EAC1BA,YAAa7F,EADa,EACbA,OACbwG,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACXT,MAAO,GACP6C,WAAY,GACZC,UAAW,IAEfrD,iBAAkBA,GAClBiB,SAAU,SAACC,GACPvG,EAAOuG,EAAOX,MAAOW,EAAOkC,WAAYlC,EAAOmC,cAyBvD,OAtBAhC,qBAAU,WAON,GANIb,EAAYzB,UACZoC,EAAgBX,EAAYzB,QAAS,CACjChB,QAAS,YAEbhB,EAAQsB,KAAK,aAEbmC,EAAYjJ,MACZ,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAMhB,EAAYjJ,QAC9CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBX,EAAYjJ,MAAO,CAC/BwG,QAAS,aAItB,CAACyC,IAEA,cAACrD,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CAAYlE,QAAQ,KAApB,6BAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,aACH8C,MAAM,aACNC,KAAK,aACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOkC,WACrBZ,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQU,YAAcT,QAAQ7B,EAAOQ,OAAO8B,YAC1DR,WAAY9B,EAAO4B,QAAQU,YAActC,EAAOQ,OAAO8B,aAE3D,cAACjB,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,YACH8C,MAAM,YACNC,KAAK,YACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOmC,UACrBb,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQW,WAAaV,QAAQ7B,EAAOQ,OAAO+B,WACzDT,WAAY9B,EAAO4B,QAAQW,WAAavC,EAAOQ,OAAO+B,YAE1D,cAAClB,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,QACH8C,MAAM,QACNC,KAAK,QACLe,YAAY,qBACZ1L,KAAK,OACL2B,MAAOuH,EAAOI,OAAOX,MACrBiC,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQnC,OAASoC,QAAQ7B,EAAOQ,OAAOf,OACrDqC,WAAY9B,EAAO4B,QAAQnC,OAASO,EAAOQ,OAAOf,QAGtD,cAACgD,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACN+J,QAAS,cAAC,KAAD,IACT7D,SAAUhD,EAAYhJ,QAN1B,oBAUCgJ,EAAYhJ,SACT,cAACiM,GAAA,EAAD,c,kCC9If6D,GAAY,CACrB,CAAEC,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CACIgH,KAAM,KACNjF,MAAO,uBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CACIgH,KAAM,KACNjF,MAAO,sBACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,SACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,MACzC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,SAC9C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CACIgH,KAAM,KACNjF,MAAO,YACP/B,MAAO,KACPiH,WAAW,GAEf,CAAED,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,OAC9C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CACIgH,KAAM,KACNjF,MAAO,yBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,SACxC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,mBAAoB/B,MAAO,OAChD,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,SACvC,CAAEgH,KAAM,KAAMjF,MAAO,oBAAqB/B,MAAO,OACjD,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,SACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,MAC7C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CACIgH,KAAM,KACNjF,MAAO,SACP/B,MAAO,IACPiH,WAAW,GAEf,CACID,KAAM,KACNjF,MAAO,0BACP/B,MAAO,MAEX,CACIgH,KAAM,KACNjF,MAAO,oCACP/B,MAAO,OAEX,CACIgH,KAAM,KACNjF,MAAO,2BACP/B,MAAO,OAEX,CACIgH,KAAM,KACNjF,MAAO,yBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,MACxC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,MACpC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,mBAAoB/B,MAAO,MAChD,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,OAC9C,CACIgH,KAAM,KACNjF,MAAO,UACP/B,MAAO,KACPiH,WAAW,GAEf,CAAED,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,SACxC,CACIgH,KAAM,KACNjF,MAAO,qBACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,OAC9C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CACIgH,KAAM,KACNjF,MAAO,8BACP/B,MAAO,OAEX,CACIgH,KAAM,KACNjF,MAAO,kCACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CACIgH,KAAM,KACNjF,MAAO,SACP/B,MAAO,KACPiH,WAAW,GAEf,CAAED,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,MAC9C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,SACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,MACxC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,oBAAqB/B,MAAO,OACjD,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CACIgH,KAAM,KACNjF,MAAO,+CACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,SACpC,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CACIgH,KAAM,KACNjF,MAAO,oCACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,MACzC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CACIgH,KAAM,KACNjF,MAAO,iCACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CACIgH,KAAM,KACNjF,MAAO,4BACP/B,MAAO,MAEX,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,MACrC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,SACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CACIgH,KAAM,KACNjF,MAAO,QACP/B,MAAO,KACPiH,WAAW,GAEf,CAAED,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CACIgH,KAAM,KACNjF,MAAO,wBACP/B,MAAO,SAEX,CACIgH,KAAM,KACNjF,MAAO,yCACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,qBAAsB/B,MAAO,MAClD,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,SAC9C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,KAC1C,CACIgH,KAAM,KACNjF,MAAO,mCACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,SAC3C,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,MACzC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CACIgH,KAAM,KACNjF,MAAO,uBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CACIgH,KAAM,KACNjF,MAAO,6BACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,mBAAoB/B,MAAO,OAChD,CACIgH,KAAM,KACNjF,MAAO,6CACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CACIgH,KAAM,KACNjF,MAAO,2BACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,SAC1C,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,MACxC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,gBAAiB/B,MAAO,OAC7C,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,iBAAkB/B,MAAO,OAC9C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,MACpC,CAAEgH,KAAM,KAAMjF,MAAO,mBAAoB/B,MAAO,OAChD,CAAEgH,KAAM,KAAMjF,MAAO,mBAAoB/B,MAAO,OAChD,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,MAC3C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,MACxC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CACIgH,KAAM,KACNjF,MAAO,4BACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,KAC3C,CACIgH,KAAM,KACNjF,MAAO,sBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,qBAAsB/B,MAAO,KAClD,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,kBAAmB/B,MAAO,OAC/C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,MACzC,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CACIgH,KAAM,KACNjF,MAAO,yBACP/B,MAAO,MAEX,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,OACxC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,OAC3C,CACIgH,KAAM,KACNjF,MAAO,wBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,OAC3C,CACIgH,KAAM,KACNjF,MAAO,4BACP/B,MAAO,SAEX,CACIgH,KAAM,KACNjF,MAAO,uBACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,OACzC,CACIgH,KAAM,KACNjF,MAAO,2BACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CACIgH,KAAM,KACNjF,MAAO,8BACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,OAAQ/B,MAAO,OACpC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,MACxC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,cAAe/B,MAAO,OAC3C,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,OAC5C,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,MACtC,CACIgH,KAAM,KACNjF,MAAO,sBACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CACIgH,KAAM,KACNjF,MAAO,4BACP/B,MAAO,OAEX,CACIgH,KAAM,KACNjF,MAAO,8BACP/B,MAAO,OAEX,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CACIgH,KAAM,KACNjF,MAAO,gBACP/B,MAAO,IACPiH,WAAW,GAEf,CAAED,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,aAAc/B,MAAO,OAC1C,CACIgH,KAAM,KACNjF,MAAO,gCACP/B,MAAO,OAEX,CACIgH,KAAM,KACNjF,MAAO,mCACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,YAAa/B,MAAO,MACzC,CACIgH,KAAM,KACNjF,MAAO,yBACP/B,MAAO,SAEX,CACIgH,KAAM,KACNjF,MAAO,oBACP/B,MAAO,SAEX,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,MACvC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,oBAAqB/B,MAAO,OACjD,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,QAAS/B,MAAO,OACrC,CAAEgH,KAAM,KAAMjF,MAAO,UAAW/B,MAAO,OACvC,CAAEgH,KAAM,KAAMjF,MAAO,eAAgB/B,MAAO,MAC5C,CAAEgH,KAAM,KAAMjF,MAAO,SAAU/B,MAAO,OACtC,CAAEgH,KAAM,KAAMjF,MAAO,WAAY/B,MAAO,QC5ZtCP,GAAmBC,UAAW,CAChCkF,YAAalF,YAERI,KAAK,UAAW,CACbC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,6BAEpCuH,sBAAuBxH,YACTI,KAAK,UAAW,CACtBC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,gCAEpCwH,kBAAmBzH,YAEdI,KAAK,UAAW,CACbC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,mCAEpCyH,eAAgB1H,YAEhB2H,eAAgB3H,YAEXI,KAAK,UAAW,CACbC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,gCAEpC2H,QAAS5H,UAEJC,SAAS,4DACdkD,WAAYnD,YAEPI,KAAK,UAAW,CACbC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,4BAEpCmD,UAAWpD,YAENI,KAAK,UAAW,CACbC,IAAI,EACJpH,KAAM+G,YAAaC,SAAS,2BAEpCT,OAAQQ,YAAaC,SAAS,wBAE5B7I,GAAQyB,aAAakB,QAAQ,SAC7B0F,GAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,MAElCqJ,GAAU,SAACzD,GAAD,OAAiBjE,IAAMmB,IAAI8C,EAAKyC,IAAQxG,MAAK,SAAAC,GAAG,OAAIA,EAAIO,SAEzD,SAASoO,KAAkB,IAAD,EACblH,aAAO,GAAD,OAAIxI,EAAJ,cAA0BsI,IADnB,KAC7BhH,KAD6B,EACvBnC,MACmBsJ,qBAAWyD,KAApCE,EAF6B,EAE7BA,QAASG,EAFoB,EAEpBA,YACTxD,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACXmE,YAAa,GACbsC,sBAAuB,GACvBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,SAAS,EACTzE,WAAY,GACZC,UAAW,GACX5D,OAAQ,IAEZO,iBAAkBA,GAClBiB,SAAU,SAACC,GACPyD,EACIoD,SAASvD,EAAQV,OAAOkE,WAAW,IAAK,KACxCD,SAASvD,EAAQT,OAAOkE,MAAM,KAAK,IACnC,IAAOF,SAASvD,EAAQT,OAAOkE,MAAM,KAAK,IAC1C/G,EAAOzB,OACP+E,EAAQR,IACR9C,EAAOkC,WACPlC,EAAOmC,UACPnC,EAAOyG,eACPzG,EAAO0G,eACP1G,EAAOiE,YACPjE,EAAOwG,kBACPxG,EAAOuG,sBACPS,EACApP,aAAakB,QAAQ,aAjCI,EAqCX6C,IAAMsL,WArCK,mBAqC9B5O,EArC8B,KAqCvB6O,EArCuB,OAsCDvL,IAAMsL,WAtCL,mBAsC9BD,EAtC8B,KAsClBG,EAtCkB,KA8DrC,OAtBAhH,qBAAU,WAON,GANwB,OAApBmD,EAAQzF,SAAwC,SAApByF,EAAQzF,UACpCoC,EAAgBqD,EAAQzF,QAAS,CAC7BhB,QAAS,YAEW,8BAApByG,EAAQzF,SAAyChC,EAAQuL,GAAG,IAEhE9D,EAAQjN,MACR,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAMgD,EAAQjN,QAC1CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBqD,EAAQjN,MAAO,CAC3BwG,QAAS,aAItB,CAACyG,IAEA,cAACrH,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,cAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,SAOI,uBACIwF,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,SACH8C,MAAM,SACNC,KAAK,SACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOzB,OACrB+C,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQjD,QAAUkD,QAAQ7B,EAAOQ,OAAO7B,QACtDmD,WAAY9B,EAAO4B,QAAQjD,QAAUqB,EAAOQ,OAAO7B,SAEvD,cAAC8I,GAAA,EAAD,CAAkBC,QAAM,EAACC,QAAS,cAACC,GAAA,EAAD,CAAUlF,UAAQ,EAAClG,MAAM,UACvDkC,GAAG,UACH+C,KAAK,UACLhJ,MAAOuH,EAAOI,OAAO2G,QACrBrF,SAAU1B,EAAO2B,eAAkBH,MAAM,sCAE3CxB,EAAOI,OAAO2G,SACZ,qCACI,cAAC1F,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,aACH8C,MAAM,aACNC,KAAK,aACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOkC,WACrBZ,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQU,YAAcT,QAAQ7B,EAAOQ,OAAO8B,YAC1DR,WAAY9B,EAAO4B,QAAQU,YAActC,EAAOQ,OAAO8B,aAE3D,cAACjB,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,YACH8C,MAAM,YACNC,KAAK,YACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOmC,UACrBb,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQW,WAAaV,QAAQ7B,EAAOQ,OAAO+B,WACzDT,WAAY9B,EAAO4B,QAAQW,WAAavC,EAAOQ,OAAO+B,YAE1D,cAACsF,GAAA,EAAD,CACInJ,GAAG,cACHqG,QAASyB,GACTsB,eAAa,EACbC,eAAgB,SAACC,GAAD,OAAYA,EAAOxG,OACnC/I,MAAOA,EACPiJ,SAAU,SAACuG,EAAYC,GACnBZ,EAASY,IAEbd,WAAYA,EACZe,cAAe,SAACF,EAAYG,GACxBb,EAAca,IAElBC,aAAc,SAAC1Q,EAAOqQ,GAAR,OACV,eAAC3L,EAAA,EAAD,yBAAKiM,UAAU,KAAKxL,GAAI,CAAE,UAAW,CAAEyL,GAAI,EAAG7M,WAAY,KAAW/D,GAArE,cACI,qBACIjB,QAAQ,OACRgD,MAAM,KACN2L,IAAG,kCAA6B2C,EAAOvB,KAAK+B,cAAzC,QACHC,OAAM,kCAA6BT,EAAOvB,KAAK+B,cAAzC,WACNlD,IAAI,KAEP0C,EAAOxG,WAGhBkH,YAAa,SAACC,GAAD,OACT,cAACtH,GAAA,EAAD,2BACQsH,GADR,IAEInH,MAAM,cACND,WAAS,EACTnC,UAAQ,EACRnC,QAAQ,WACRqE,OAAO,SACPG,KAAK,cACLmH,WAAU,2BACHD,EAAOC,YADJ,IAENC,aAAc,uBAK9B,cAACxH,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,iBACH8C,MAAM,iBACNC,KAAK,iBACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAO0G,eACrBpF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQkF,gBAAkBjF,QAAQ7B,EAAOQ,OAAOsG,gBAC9DhF,WAAY9B,EAAO4B,QAAQkF,gBAAkB9G,EAAOQ,OAAOsG,iBAE/D,cAACzF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPC,WAAS,EACTE,KAAK,iBACLD,MAAM,iBACN1K,KAAK,OACL4H,GAAG,iBACHjG,MAAOuH,EAAOI,OAAOyG,eACrBnF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQiF,gBAAkBhF,QAAQ7B,EAAOQ,OAAOqG,gBAC9D/E,WAAY9B,EAAO4B,QAAQiF,gBAAkB7G,EAAOQ,OAAOqG,iBAE/D,cAACxF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,oBACLD,MAAM,WACN1K,KAAK,OACL4H,GAAG,oBACHjG,MAAOuH,EAAOI,OAAOwG,kBACrBlF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQgF,mBAAqB/E,QAAQ7B,EAAOQ,OAAOoG,mBACjE9E,WAAY9B,EAAO4B,QAAQgF,mBAAqB5G,EAAOQ,OAAOoG,oBAElE,cAACvF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,wBACLD,MAAM,sBACN1K,KAAK,OACL4H,GAAG,wBACHjG,MAAOuH,EAAOI,OAAOuG,sBACrBjF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ+E,uBAAyB9E,QAAQ7B,EAAOQ,OAAOmG,uBACrE7E,WAAY9B,EAAO4B,QAAQ+E,uBAAyB3G,EAAOQ,OAAOmG,wBAEtE,cAACtF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,cACLD,MAAM,cACN1K,KAAK,OACL4H,GAAG,cACHjG,MAAOuH,EAAOI,OAAOiE,YACrB3C,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQyC,aAAexC,QAAQ7B,EAAOQ,OAAO6D,aAC3DvC,WAAY9B,EAAO4B,QAAQyC,aAAerE,EAAOQ,OAAO6D,iBAGpE,cAAC5B,GAAA,EAAD,CACI3L,KAAK,SACLmG,QAAQ,YACRsE,WAAS,EACTzE,GAAI,CACAN,MAAO,QACPuE,QAAS,OACT6E,UAAW,IAEflD,SAAUgB,EAAQhN,QATtB,kBAaCgN,EAAQhN,SACL,cAACiM,GAAA,EAAD,aCtT5B,IAAMpM,GAAQyB,aAAakB,QAAQ,SAC7B0F,GAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KACpCoJ,iBAAiB,GAEfC,GAAU,SAACzD,GAAD,OAAiBjE,IAAMmB,IAAI8C,EAAKyC,IAAQxG,MAAK,SAAAC,GAAG,OAAIA,EAAIO,SACzD,SAASkQ,KAAmB,IAC/BlQ,EAASkH,aAAO,GAAD,OAAIxI,EAAJ,sBAAkCsI,IAAjDhH,KACR,OACI,cAACwE,EAAA,EAAD,CAAMN,GAAI,CAAEpD,MAAO,OAAQqP,QAAS,oBAApC,SACKnQ,GAAOA,EAAKwJ,cAAcC,KAAI,SAAC3C,GAC5B,OACI,eAACrD,EAAA,EAAD,WACI,cAACgB,EAAA,EAAD,CAAU1C,WAAW,aAArB,SACI,cAAC8C,EAAA,EAAD,CACIC,QAASgC,EAAY4C,WAAa,IAAM5C,EAAY6C,UACpDyG,UACI,cAAC,IAAMC,SAAP,UACI,cAAC9H,GAAA,EAAD,CACIrE,GAAI,CAAEpC,QAAS,UACf4N,UAAU,OACVrL,QAAQ,QACRT,MAAM,eAJV,SAMKkD,EAAYX,qBAMjC,cAAC5B,EAAA,EAAD,CAASF,QAAQ,YAAYqL,UAAU,SAlBjC5I,EAAYhB,S,cCZpCnI,GAAQyB,aAAakB,QAAQ,SAC7B0F,GAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KACpCoJ,iBAAiB,GAEfC,GAAU,SAACzD,GAAD,OAAiBjE,IAAMmB,IAAI8C,EAAKyC,IAAQxG,MAAK,SAAAC,GAAG,OAAIA,EAAIO,SACzD,SAASsQ,KAAgB,IAAD,EACXpJ,aAAO,GAAD,OAAIxI,EAAJ,wBAAoCsI,IAA1DhH,EAD2B,EAC3BA,KAD2B,EACrBnC,MACd,OACI,cAAC2G,EAAA,EAAD,CAAMN,GAAI,CAAEpD,MAAO,OAAQqP,QAAS,oBAApC,SACKnQ,GAAQA,EAAKuQ,gBAAgB9G,KAAI,SAAC+G,GAC/B,OACA,eAAC/M,EAAA,EAAD,WACI,eAACgB,EAAA,EAAD,CAAU1C,WAAW,aAArB,UACI,cAAC0O,GAAA,EAAD,UACI,cAACpI,GAAA,EAAD,CAAQnE,GAAI,CAAEoE,WAAY,WAA1B,SAAwCkI,EAAYE,WAExD,cAAC7L,EAAA,EAAD,CACIC,QAAS0L,EAAYzK,OAAQ,IAC7BqK,UACI,eAAC,IAAMC,SAAP,WACI,cAAC9H,GAAA,EAAD,CACIrE,GAAI,CAAEpC,QAAS,UACf4N,UAAU,OACVrL,QAAQ,QACRT,MAAM,eAJV,uBADJ,kBASW4M,EAAYtS,cAKnC,cAACqG,EAAA,EAAD,CAASF,QAAQ,QAAQqL,UAAU,SAtB7Bc,EAAY1K,SCGtC,IAAM6K,GAAQ,CACVhN,SAAU,WACViN,IAAK,MACLC,KAAM,MACNC,UAAW,wBAEXX,QAAS,mBACTY,OAAQ,iBACRC,UAAW,GACXC,EAAG,EACHC,UAAW,OACXC,SAAU,QAERxT,GAAQyB,aAAakB,QAAQ,SAC7B0F,GAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KACpCoJ,iBAAiB,GAEfC,GAAU,SAACzD,GAAD,OAAiBjE,IAAMmB,IAAI8C,EAAKyC,IAAQxG,MAAK,SAAAC,GAAG,OAAIA,EAAIO,SAEzD,SAASoR,KAAa,IACzBpR,EAASkH,aAAO,GAAD,OAAIxI,EAAJ,qBAAiCsI,IAAhDhH,KACMqR,EAAgBnK,aAAO,GAAD,OAAIxI,EAAJ,eAA2BsI,IAAvDhH,KACA8K,EAAY3D,qBAAWyD,IAAvBE,QAHwB,EAIM3H,IAAMsL,UAAS,GAJrB,mBAIzB6C,EAJyB,KAIZC,EAJY,OAOApO,IAAMsL,UAAS,GAPf,mBAOzB+C,EAPyB,KAOfC,EAPe,OAUctO,IAAMsL,UAAS,GAV7B,mBAUzBiD,EAVyB,KAURC,EAVQ,KAahC,OACI,qCACI,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACpQ,QAAS,EAAzB,UACI,cAACmQ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAACC,GAAA,EAAD,WAOI,eAACC,GAAA,EAAD,WACKlS,GAAS,eAACuI,GAAA,EAAD,CAAY4J,cAAY,EAAC9N,QAAQ,KAAKqL,UAAU,MAAhD,UACL1P,EAAKoS,QADA,QAGV,cAAC7J,GAAA,EAAD,CAAYlE,QAAQ,QAAQT,MAAM,iBAAlC,SACKyN,GAAeA,EAAYrR,KAAK,GAAG0J,WAAa,IAAM2H,EAAYrR,KAAK,GAAG2J,eAGnF,eAAC0I,GAAA,EAAD,WACI,cAACxI,GAAA,EAAD,CAAQxF,QAAQ,YAAYiO,KAAK,QAAQtO,QA5BvC,kBAAMuN,GAAe,IA4BvB,qBAEA,cAAC,KAAD,CAAKrN,GAAI,CAAEE,SAAU,KACrB,cAACyF,GAAA,EAAD,CAAQyI,KAAK,QAAQjO,QAAQ,WAAWL,QA5BzC,kBAAMyN,GAAY,IA4BjB,0BAIZ,cAACG,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,eAAC/J,GAAA,EAAD,CAAO/D,GAAI,CAEPjC,QAAS,EACT0B,SAAU,YAHd,UAKI,cAAC4E,GAAA,EAAD,CAAYlE,QAAQ,KAApB,2BACA,cAAC6L,GAAD,IACA,cAACqC,GAAA,EAAD,CAAK3O,MAAM,UAAUG,aAAW,MAAMG,GAAI,CACtCP,SAAU,WACV6O,OAAQ,EACRC,MAAO,GAEPzO,QA1CM,kBAAM2N,GAAmB,IAqCnC,SAOI,cAAC,KAAD,WAIZ,cAACC,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAAC9J,GAAA,EAAD,CAAO/D,GAAI,CAAEwO,UAAW,OAAQzQ,QAAS,GAAzC,UACI,cAACsG,GAAA,EAAD,CAAYlE,QAAQ,KAApB,iCACA,cAACiM,GAAD,YAIZ,cAACqC,GAAA,EAAD,CACInQ,KAAM8O,EACNsB,QA9De,kBAAMrB,GAAe,IA+DpCsB,kBAAgB,oBAChBC,mBAAiB,0BAJrB,SAMI,cAAC,KAAD,CAAK5O,GAAIyM,GAAT,SACsB,IAAjB7F,EAAQP,KACL,cAAC6D,GAAD,IACE,cAAC,GAAD,QAMd,cAACuE,GAAA,EAAD,CACInQ,KAAMgP,EACNoB,QA1EY,kBAAMnB,GAAY,IA2E9BoB,kBAAgB,oBAChBC,mBAAiB,0BAJrB,SAMI,cAAC,KAAD,CAAK5O,GAAIyM,GAAT,SACI,cAAC1J,GAAD,QAGR,cAAC0L,GAAA,EAAD,CACInQ,KAAMkP,EACNkB,QAjFmB,kBAAMjB,GAAmB,IAkF5CkB,kBAAgB,oBAChBC,mBAAiB,0BAJrB,SAMI,cAAC,KAAD,CAAK5O,GAAIyM,GAAT,SACI,cAACjD,GAAD,WCxIL,SAASqF,KACpB,OACI,2CCFO,SAASC,KACpB,OACI,6CCFO,SAAS1C,KAEpB,OADAlK,QAAQC,IAAI,UAER,+C,cCWO4M,GAbG,WACd,OACI,eAAC1K,GAAA,EAAD,CAAYlE,QAAQ,QAAQT,MAAM,gBAAgBsP,MAAM,SAAxD,UACK,kBACD,cAACC,GAAA,EAAD,CAAMvP,MAAM,UAAUwP,KAAK,IAA3B,6BAEQ,KACP,IAAIC,MAAOC,cACX,QCFP1R,GAAeC,YAAO,MAAPA,EAAc,gBAAGhB,EAAH,EAAGA,MAAH,oBAC/BiB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,QAASpB,EAAMY,QAAQ,EAAG,IAEvBZ,EAAMqB,OAAOC,YA6BLoR,OA3Bf,WAAiB,IACPC,EAAShQ,cAATgQ,KACN,OACI,mCACI,eAAC/P,EAAA,EAAD,CAAKS,GAAI,CAAEpC,QAAS,QAApB,UACI,cAAC,GAAD,IACA,eAAC2B,EAAA,EAAD,CAAKiM,UAAU,OAAOxL,GAAI,CAAEE,SAAU,EAAG6M,EAAG,GAA5C,UACI,cAAC,GAAD,IACA,cAAC,IAAD,UACI,cAAC,GAAD,UACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,IAAD,CAAOwC,OAAK,EAACD,KAAI,UAAKA,GAAQ9D,UAAW0B,KACzC,cAAC,IAAD,CAAOqC,OAAK,EAACD,KAAI,UAAKA,EAAL,eAAwB9D,UAAWsD,KACpD,cAAC,IAAD,CAAOS,OAAK,EAACD,KAAI,UAAKA,EAAL,iBAA0B9D,UAAWY,KACtD,cAAC,IAAD,CAAOmD,OAAK,EAACD,KAAI,UAAKA,EAAL,aAAsB9D,UAAWqD,iBAMtE,cAAC,GAAD,U,oBC9BVzM,GAAmBC,UAAW,CAChC3I,MAAO2I,YAEF3I,MAAM,uBACN4I,SAAS,qBACdzG,SAAUwG,YAELC,SAAS,0BAqHHkN,GAnHS,WAAoB,IAAD,EACfvM,qBAAWvI,GAA3BK,EAD+B,EAC/BA,KAAMa,EADyB,EACzBA,MACN2H,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACX1J,MAAO,GACPmC,SAAU,IAEduG,iBAAkBA,GAClBiB,SAAU,SAACC,GACP1H,EAAM0H,EAAO5J,MAAO4J,EAAOzH,aAgBnC,OAbA4H,qBAAU,WACa,SAAf1I,EAAKtB,OAAmC,OAAfsB,EAAKtB,QAC9B8J,EAAgB,yBAA0B,CACtCpD,QAAS,YAEbhB,EAAQsB,KAAK,aAEb1F,EAAKpB,OACL4J,EAAgBxI,EAAKpB,MAAO,CACxBwG,QAAS,YAGlB,CAACpF,IAEA,cAACwE,EAAA,EAAD,CAAKS,GAAI,CAAEyP,OAAQ,QAAnB,SACI,cAAC1L,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACV8E,UAAW,MACX7E,QAAS,QALjB,SAOI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CAAYmH,UAAU,KAAKrL,QAAQ,KAAnC,qBAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,QACH8C,MAAM,QACNC,KAAK,QACL3K,KAAK,QACL2B,MAAOuH,EAAOI,OAAO5J,MACrBkL,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQpL,OAASqL,QAAQ7B,EAAOQ,OAAOhK,OACrDsL,WAAY9B,EAAO4B,QAAQpL,OAASwJ,EAAOQ,OAAOhK,QAGtD,cAAC6K,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,WACLD,MAAM,WACN1K,KAAK,WACL4H,GAAG,WACHjG,MAAOuH,EAAOI,OAAOzH,SACrB+I,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQjJ,UAAYkJ,QAAQ7B,EAAOQ,OAAO7H,UACxDmJ,WAAY9B,EAAO4B,QAAQjJ,UAAYqH,EAAOQ,OAAO7H,WAGzD,cAAC8J,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACNkG,SAAU7K,EAAKnB,QALnB,qBASCmB,EAAKnB,SACF,cAACiM,GAAA,EAAD,IAEJ,eAAC6H,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACI,cAACoB,GAAA,EAAD,CAAMC,KAAK,IAAI/O,QAAQ,YAI3B,cAACuN,GAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACqB,GAAA,EAAD,CAAMC,KAAK,YAAY/O,QAAQ,QAA/B,4D,+GCvHnBuP,GAAiB,iBACjBC,GAAmB,mBACnBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAgB,kBAChBC,GAAe,iBCFfvW,GAA0B,CACnC6M,KAAM,EACN1D,MAAO,KACPhJ,MAAO,KACPwH,QAAS,KACTvH,SAAS,EACToW,iBAAiB,EACjBvW,MAAO,KACPwW,gBAAgB,GAyELpW,GAnBC,SAACC,EAAkBC,GAC/B,OAAQA,EAAOC,MACX,KAAKC,GACD,OAtDU,SAACH,EAAkBC,GACrC,OAAOd,EAAaa,EAAO,CACvBF,SAAS,IAoDEsW,CAAcpW,GACzB,KAAKG,GACD,OAjCS,SAACH,EAAkBC,GACpC,OAAOd,EACHa,EAAO,CACPF,SAAS,EACTuH,QAASpH,EAAOoH,QAChBwB,MAAO5I,EAAO4I,MACdhJ,MAAO,OA2BIwW,CAAarW,EAAOC,GAC/B,KAAKE,GACD,OA1CS,SAACH,EAAkBC,GACpC,OAAOd,EAAaa,EAAO,CACvBH,MAAOI,EAAOJ,MACdC,SAAS,EACTuH,QAAS,OAsCEiP,CAAatW,EAAOC,GAC/B,KAAKE,GACD,OA5BW,SAACH,EAAkBC,GACtC,OAAOd,EACHa,EAAO,CACPF,SAAS,EACTuH,QAASpH,EAAOoH,QAChBkF,KAAM,EACN2J,iBAAiB,EACjBrW,MAAO,OAqBI0W,CAAevW,EAAOC,GACjC,KAAKE,GACD,OAxDU,SAACH,EAAkBC,GACrC,OAAOd,EAAaa,EAAO,CACvBH,MAAO,KACPwH,QAASpH,EAAOoH,QAChBvH,SAAS,EACTH,MAAOM,EAAON,MACd4M,KAAM,IAkDKiK,CAAcxW,EAAOC,GAChC,KAAKE,GACD,OAtBU,SAACH,EAAkBC,GACrC,OAAOd,EACHa,EAAO,CACPF,SAAS,EACTuH,QAASpH,EAAOoH,QAChB8O,gBAAgB,EAChBtW,MAAO,OAgBI4W,CAAczW,EAAOC,GAChC,QACI,OAAOD,IC1EN0W,GAAkB7V,wBAA+BnB,IAiM/CiX,GA/LiB,SAAC5V,GAA6B,IAAD,EAEpBC,qBAAWjB,GAASL,IAFA,mBAElDkX,EAFkD,KAExCC,EAFwC,KAInDT,EAAgB,WAClB,MAAO,CACHlW,KAAMC,GACNN,MAAO,KACP0M,KAAM,EACNlF,QAAS,KACTwB,MAAO,KACPqN,gBAAiB,KACjBvW,MAAO,KACPwW,eAAgB,OAiBlBG,EAAe,SAACzW,GAClB,MAAO,CACHK,KAAMC,GACNoM,KAAM,KACN1M,QACAwH,QAAS,KACTwB,MAAO,KACPqN,gBAAiB,KACjBvW,MAAO,KACPwW,eAAgB,OAiJxB,OACI,cAACO,GAAgB9U,SAAjB,CAA0BC,MAAO,CAAE+U,WAAUE,cA3G3B,SAACjO,GACnBgO,EAAiBT,KACjB9U,IAAMyV,SAAShO,iBAAkB,EACjCzH,IAAMC,KAAN,UAAcb,EAAd,SACI,CACIyH,aAAcU,GAElB,CACImO,eAAgB,eAChBjO,iBAAiB,IAEvBvH,MAAK,SAAAC,GACgB,MAAfA,EAAIiR,SACJmE,EAjDS,SAACxP,EAAiBwB,GACnC,MAAO,CACH3I,KAAMC,GACNoM,KAAM,KACN1M,MAAO,KACPwH,UACAwB,QACAqN,gBAAiB,KACjBvW,MAAO,KACPwW,eAAgB,MAwCKE,CAAa,iCAAkCxN,IAChEzH,aAAaa,QAAQ,QAAS4G,OAEnCnH,OAAM,SAAAC,GACDA,EAAIkM,SAAS7L,KAAK4H,OAClBiN,EAAiBP,EAAalU,KAAKC,UAAUV,EAAIkM,SAAS7L,KAAK4H,UAE/DiN,EAAiBP,EAAa,6BAuFsBW,OA5DjD,SAACrX,EAAe8L,EAAoBC,EAAmB5J,EAAkBmV,EAA+B/O,GACnH0O,EAAiBT,KACjB,IAAIe,EAAgB/V,aAAakB,QAAQ,SAEzChB,IAAMC,KAAN,UAAcd,GAAgB,CAC1BiL,aACAC,YACA/L,QACAuI,aAAcgP,EACdpV,WACAmV,0BAMF1V,MAAK,SAAAC,GA5Ha,IAAC4F,EAAiB1H,EA6HlCyB,aAAaa,QAAQ,QAASR,EAAIO,KAAKrC,OACvCyB,aAAaa,QAAQ,QAASrC,GAC9BiX,GA/HiBxP,EA+HgB,+BA/HC1H,EA+H+B8B,EAAIO,KAAKrC,MA9HvE,CACHO,KAAMC,GACNoM,KAAM,KACN1M,MAAO,KACPwH,UACAwB,MAAO,KACPqN,gBAAiB,KACjBvW,QACAwW,eAAgB,WAuHjBzU,OAAM,SAAAC,GACDA,EAAIkM,SAAS7L,KAAK4H,QAGdjI,EAAIkM,SAAS7L,KAAK4H,OAFtBiN,EAAiBP,EAAalU,KAAKC,UAAUV,EAAIkM,SAAS7L,KAAK4H,UAK3DiN,EAAiBP,EAAa,6BAiC0Bc,cA5BlD,SAACC,EAAqBnH,EAAwBD,EAAwBD,EAA2BsH,EAAgC7J,GACnJoJ,EAAiBT,KAEjB,IAAMzW,EAAQyB,aAAakB,QAAQ,SACnC,GAAI3C,EAAO,CACP,IAAMqI,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYvI,KAExC2B,IAAMC,KAAN,UAAcb,EAAd,iBAAuC,CACnC2W,cACAE,cAAe,aACfrH,iBACAD,iBACAD,oBACAsH,yBACA7J,eACDzF,GACExG,MAAK,SAAAC,GACFoV,EA5GL,CACH3W,KAAMC,GACNoM,KAAM,KACN1M,MAAO,KACPwH,QAwGuC,8BAvGvCwB,MAAO,KACPqN,iBAAiB,EACjBvW,MAAO,KACPwW,eAAgB,UAsGXzU,OAAM,SAAAC,GACHkV,EAAiBP,EAAa,iCAGtCO,EAAiBP,EAAa,oCAIiDkB,sBAnFzD,SAAC3H,EAAc1H,GACzC0O,EAAiBT,KACjB9U,IAAMyV,SAAShO,iBAAkB,EACjCzH,IAAMC,KAAN,UAAcb,EAAd,gBAAsC,CAClCmP,OACA1H,gBACD,CACC6O,eAAgB,eAChBjO,iBAAiB,IAEhBvH,MAAK,SAAAC,GACiB,MAAfA,EAAIiR,QACJmE,EA3DL,CACH3W,KAAMC,GACNoM,KAAM,KACN1M,MAAO,KACPwH,QAuDwC,iCAtDxCwB,MAAO,KACPqN,iBAAiB,EACjBvW,MAAO,KACPwW,eAAgB,UAsDfzU,OAAM,SAAAC,GACCA,EAAIkM,SAAS7L,KAAK4H,OAClBiN,EAAiBP,EAAalU,KAAKC,UAAUV,EAAIkM,SAAS7L,KAAK4H,UAE/DiN,EAAiBP,EAAa,mCAgE1C,SACKvV,EAAM2B,YC3Lb4F,GAAmBC,UAAW,CAChC3I,MAAO2I,YAEF3I,MAAM,uBACN4I,SAAS,qBACdkD,WAAYnD,YAEPE,IAAI,EAAG,cACPgP,IAAI,GAAI,aACRjP,SAAS,yBACdmD,UAAWpD,YAENE,IAAI,EAAG,cACPgP,IAAI,GAAI,aACRjP,SAAS,yBACdzG,SAAUwG,YAELmP,QACG,iEACA,sGAEHlP,SAAS,wBACdmP,iBAAkBpP,YAEbqP,MAAM,CAACrP,OAAQ,YAAa,MAAO,wBACnCC,SAAS,kCAEH,SAASqP,KAAU,IAAD,EACA1O,qBAAWuN,IAAhCE,EADqB,EACrBA,SAAUK,EADW,EACXA,OACZ7N,EAASC,aAAU,CACrBC,cAAe,CACX1J,MAAO,GACPmC,SAAU,GACV4V,iBAAkB,GAClBhM,UAAW,GACXD,WAAY,IAEhBpD,iBAAkBA,GAClBiB,SAAU,SAACC,GACPyN,EAAOzN,EAAO5J,MAAO4J,EAAOkC,WAAYlC,EAAOmC,UAAWnC,EAAOzH,SAAUyH,EAAOmO,iBAAkBf,EAASzO,iBAG7GsB,EAAoBC,eAApBD,gBACFpE,EAAUC,cAuBhB,OAtBAqE,qBAAU,WAON,GANIiN,EAASjX,QACT8J,EAAgBmN,EAASvP,QAAS,CAC9BhB,QAAS,YAEbhB,EAAQsB,KAAK,4BAEbiQ,EAAS/W,MACT,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAM8M,EAAS/W,QAC3CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBmN,EAAS/W,MAAO,CAC5BwG,QAAS,aAItB,CAACuQ,IAEA,cAACnR,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CAEIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAJpB,UAQI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CAAYmH,UAAU,KAAKrL,QAAQ,KAAnC,qBAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,QACH8C,MAAM,QACNC,KAAK,QACL3K,KAAK,QACL2B,MAAOuH,EAAOI,OAAO5J,MACrBkL,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQpL,OAASqL,QAAQ7B,EAAOQ,OAAOhK,OACrDsL,WAAY9B,EAAO4B,QAAQpL,OAASwJ,EAAOQ,OAAOhK,QAEtD,cAAC6K,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,aACH8C,MAAM,aACNC,KAAK,aACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOkC,WACrBZ,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQU,YAAcT,QAAQ7B,EAAOQ,OAAO8B,YAC1DR,WAAY9B,EAAO4B,QAAQU,YAActC,EAAOQ,OAAO8B,aAE3D,cAACjB,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,YACH8C,MAAM,YACNC,KAAK,YACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAOmC,UACrBb,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQW,WAAaV,QAAQ7B,EAAOQ,OAAO+B,WACzDT,WAAY9B,EAAO4B,QAAQW,WAAavC,EAAOQ,OAAO+B,YAE1D,cAAClB,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,WACLD,MAAM,WACN1K,KAAK,WACL4H,GAAG,WACHjG,MAAOuH,EAAOI,OAAOzH,SACrB+I,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQjJ,UAAYkJ,QAAQ7B,EAAOQ,OAAO7H,UACxDmJ,WAAY9B,EAAO4B,QAAQjJ,UAAYqH,EAAOQ,OAAO7H,WAEzD,cAAC0I,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,mBACLD,MAAM,mBACN1K,KAAK,WACL4H,GAAG,mBACHjG,MAAOuH,EAAOI,OAAOmO,iBACrB7M,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ2M,kBAAoB1M,QAAQ7B,EAAOQ,OAAO+N,kBAChEzM,WAAY9B,EAAO4B,QAAQ2M,kBAAoBvO,EAAOQ,OAAO+N,mBAGjE,cAAC9L,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACNkG,SAAU8K,EAAS9W,QALvB,kBASC8W,EAAS9W,SACN,cAACiM,GAAA,EAAD,cC5K5B,IAAMzD,GAAmBC,UAAW,CAChCM,MAAON,YAEFM,QACAL,SAAS,uBAwGHkN,GArGS,WAAoB,IAAD,EACHvM,qBAAWuN,IAAvCE,EAD+B,EAC/BA,SAAUE,EADqB,EACrBA,cACVrN,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACXT,MAAO,IAEXP,iBAAkBA,GAClBiB,SAAU,SAACC,GACPsN,EAActN,EAAOX,UAyB7B,OAtBAc,qBAAU,WAON,GANIiN,EAAS/N,QACTY,EAAgBmN,EAASvP,QAAS,CAC9BhB,QAAS,YAEbhB,EAAQsB,KAAK,4BAEbiQ,EAAS/W,MACT,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAM8M,EAAS/W,QAC3CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBmN,EAAS/W,MAAO,CAC5BwG,QAAS,aAItB,CAACuQ,IAEA,cAACnR,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CAAYlE,QAAQ,KAApB,yCAGA,cAACkE,GAAA,EAAD,4CAGA,uBACIhB,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,QACH8C,MAAM,QACNC,KAAK,QACLe,YAAY,qBACZ1L,KAAK,OACL2B,MAAOuH,EAAOI,OAAOX,MACrBiC,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQnC,OAASoC,QAAQ7B,EAAOQ,OAAOf,OACrDqC,WAAY9B,EAAO4B,QAAQnC,OAASO,EAAOQ,OAAOf,QAEtD,cAAC0B,GAAA,EAAD,sNAGA,cAACsB,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACNkG,SAAU8K,EAAS9W,QALvB,kBASC8W,EAAS9W,SACN,cAACiM,GAAA,EAAD,eCrGtBzD,GAAmBC,UAAW,CAChCsH,KAAMtH,YAEDmP,QAAQ,aAAc,mBACtBlP,SAAS,mCAEH,SAASsP,KAAgB,IAAD,EACS3O,qBAAWuN,IAA/CE,EAD2B,EAC3BA,SAAUY,EADiB,EACjBA,sBACV/N,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACXuG,KAAM,IAEVvH,iBAAkBA,GAClBiB,SAAU,SAACC,GACPgO,EAAsBhO,EAAOqG,KAAM+G,EAAS/N,UAyBpD,OAtBAc,qBAAU,WAON,GANIiN,EAASV,kBACTzM,EAAgBmN,EAASvP,QAAS,CAC9BhB,QAAS,YAEbhB,EAAQsB,KAAK,qBAEbiQ,EAAS/W,MACT,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAM8M,EAAS/W,QAC3CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBmN,EAAS/W,MAAO,CAC5BwG,QAAS,aAItB,CAACuQ,IAEA,cAACnR,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACwG,GAAA,EAAD,CAAYlE,QAAQ,KAApB,kCAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,OACH8C,MAAM,OACNC,KAAK,OACL3K,KAAK,OACL6X,OAAQ3O,EAAO4O,WACfnW,MAAOuH,EAAOI,OAAOqG,KACrB/E,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ6E,MAAQ5E,QAAQ7B,EAAOQ,OAAOiG,MACpD3E,WAAY9B,EAAO4B,QAAQ6E,MAAQzG,EAAOQ,OAAOiG,OAErD,cAAChE,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UACNkG,SAAU8K,EAAS9W,QALvB,kBASC8W,EAAS9W,SACN,cAACiM,GAAA,EAAD,c,cCtFtBzD,GAAmBC,UAAW,CAChCkF,YAAalF,YAERC,SAAS,2BACduH,sBAAuBxH,YAElBC,SAAS,qCACdwH,kBAAmBzH,YAEdC,SAAS,iCACdyH,eAAgB1H,YAEhB2H,eAAgB3H,YAEXC,SAAS,8BACdyP,MAAO1P,UAEFqP,MAAM,EAAC,GAAO,yBACdpP,SAAS,8DAEH,SAAS0P,KAAgB,IAAD,EACC/O,qBAAWuN,IAAvCE,EAD2B,EAC3BA,SAAUQ,EADiB,EACjBA,cACV3N,EAAoBC,eAApBD,gBACFpE,EAAUC,cACV8D,EAASC,aAAU,CACrBC,cAAe,CACXmE,YAAa,GACbsC,sBAAuB,GACvBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChB+H,OAAO,GAEX3P,iBAAkBA,GAClBiB,SAAU,SAACC,GACP4N,EAAc5G,EAAYhH,EAAO0G,eAAgB1G,EAAOyG,eAAgBzG,EAAOwG,kBAAmBxG,EAAOuG,sBAAuBvG,EAAOiE,gBAG/I9D,qBAAU,WAQN,GAPIiN,EAAST,iBACT1M,EAAgBmN,EAASvP,QAAS,CAC9BhB,QAAS,YAEbU,OAAOC,SAASC,SAChB5B,EAAQsB,KAAK,aAEbiQ,EAAS/W,MACT,IAEI,IADA,IAAI+J,EAAcC,OAAOL,OAAOpH,KAAK0H,MAAM8M,EAAS/W,QAC3CkK,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BN,EAAgBG,EAAOG,GAAG,GAAI,CAC1B1D,QAAS,UAGnB,MAAOxG,GACL4J,EAAgBmN,EAAS/W,MAAO,CAC5BwG,QAAS,aAItB,CAACuQ,IAxC+B,MAyCTzR,IAAMsL,WAzCG,mBAyC5B5O,EAzC4B,KAyCrB6O,EAzCqB,OA0CCvL,IAAMsL,WA1CP,mBA0C5BD,EA1C4B,KA0ChBG,EA1CgB,KAiDnC,OANAxL,IAAMwE,WAAU,WACZvB,QAAQC,IAAI,QAASxG,KACtB,CAACA,IACJsD,IAAMwE,WAAU,WACZvB,QAAQC,IAAI,aAAcmI,KAC3B,CAACA,IAEA,cAAC/K,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACsG,GAAA,EAAD,CACInE,GAAI,CAAEoE,WAAY,WADtB,SAGI,cAAC,IAAD,MAEJ,cAACC,GAAA,EAAD,CAAYmH,UAAU,KAAKrL,QAAQ,KAAnC,2BAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACyG,GAAA,EAAD,CACInJ,GAAG,cACHqG,QAASyB,GACTsB,eAAa,EACbC,eAAgB,SAACC,GAAD,OAAYA,EAAOxG,OACnC/I,MAAOA,EACPiJ,SAAU,SAACuG,EAAYC,GACnBZ,EAASY,IAEbd,WAAYA,EACZe,cAAe,SAACF,EAAYG,GACxBb,EAAca,IAElBC,aAAc,SAAC1Q,EAAOqQ,GAAR,OACV,eAAC3L,EAAA,EAAD,yBAAKiM,UAAU,KAAKxL,GAAI,CAAE,UAAW,CAAEyL,GAAI,EAAG7M,WAAY,KAAW/D,GAArE,cACI,qBACIjB,QAAQ,OACRgD,MAAM,KACN2L,IAAG,kCAA6B2C,EAAOvB,KAAK+B,cAAzC,QACHC,OAAM,kCAA6BT,EAAOvB,KAAK+B,cAAzC,WACNlD,IAAI,KAEP0C,EAAOxG,WAGhBkH,YAAa,SAACC,GAAD,OACT,cAACtH,GAAA,EAAD,2BACQsH,GADR,IAEInH,MAAM,cACND,WAAS,EACTnC,UAAQ,EACRnC,QAAQ,WACRqE,OAAO,SACPG,KAAK,cACLmH,WAAU,2BACHD,EAAOC,YADJ,IAENC,aAAc,uBAK9B,cAACxH,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,iBACH8C,MAAM,iBACNC,KAAK,iBACL3K,KAAK,OACL2B,MAAOuH,EAAOI,OAAO0G,eACrBpF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQkF,gBAAkBjF,QAAQ7B,EAAOQ,OAAOsG,gBAC9DhF,WAAY9B,EAAO4B,QAAQkF,gBAAkB9G,EAAOQ,OAAOsG,iBAE/D,cAACzF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPC,WAAS,EACTE,KAAK,iBACLD,MAAM,iBACN1K,KAAK,OACL4H,GAAG,iBACHjG,MAAOuH,EAAOI,OAAOyG,eACrBnF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQiF,gBAAkBhF,QAAQ7B,EAAOQ,OAAOqG,gBAC9D/E,WAAY9B,EAAO4B,QAAQiF,gBAAkB7G,EAAOQ,OAAOqG,iBAE/D,cAACxF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,oBACLD,MAAM,wBACN1K,KAAK,OACL4H,GAAG,oBACHjG,MAAOuH,EAAOI,OAAOwG,kBACrBlF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQgF,mBAAqB/E,QAAQ7B,EAAOQ,OAAOoG,mBACjE9E,WAAY9B,EAAO4B,QAAQgF,mBAAqB5G,EAAOQ,OAAOoG,oBAElE,cAACvF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,wBACLD,MAAM,4BACN1K,KAAK,OACL4H,GAAG,wBACHjG,MAAOuH,EAAOI,OAAOuG,sBACrBjF,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ+E,uBAAyB9E,QAAQ7B,EAAOQ,OAAOmG,uBACrE7E,WAAY9B,EAAO4B,QAAQ+E,uBAAyB3G,EAAOQ,OAAOmG,wBAEtE,cAACtF,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACTE,KAAK,cACLD,MAAM,cACN1K,KAAK,SACL4H,GAAG,cACHjG,MAAOuH,EAAOI,OAAOiE,YACrB3C,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQyC,aAAexC,QAAQ7B,EAAOQ,OAAO6D,aAC3DvC,WAAY9B,EAAO4B,QAAQyC,aAAerE,EAAOQ,OAAO6D,cAE5D,cAAC0K,GAAA,EAAD,UACI,cAACtH,GAAA,EAAD,CACIE,QAAS,cAACC,GAAA,EAAD,CACLpL,MAAM,UACNkC,GAAG,QACH+C,KAAK,QACLhJ,MAAOuH,EAAOI,OAAOyO,MACrBnN,SAAU1B,EAAO2B,eAErBH,MAAM,uIAId,cAACiB,GAAA,EAAD,CACI3L,KAAK,SACLmG,QAAQ,YACRsE,WAAS,EACTzE,GAAI,CACAN,MAAO,QACPuE,QAAS,QAEb2B,SAAU8K,EAAS9W,QARvB,4BAYC8W,EAAS9W,SACN,cAACiM,GAAA,EAAD,cC1O5B,IAAMzD,GAAmBC,UAAW,CAChCsH,KAAMtH,YAEDC,SAAS,mCAEH,SAAS4P,KAEpB,IAAMhP,EAASC,aAAU,CACrBC,cAAe,CACXuG,KAAM,IAEVvH,iBAAkBA,GAClBiB,SAAU,SAACC,GAEPpB,QAAQC,IAAI,YAGpB,OACI,cAAC5C,EAAA,EAAD,UACI,cAACwE,GAAA,EAAD,CACI/D,GAAI,CACAjC,QAAS,EACTiG,SAAU,QACVC,QAAS,QAJjB,SAMI,eAAC1E,EAAA,EAAD,CACIS,GAAI,CACApC,QAAS,OAAQsG,cAAe,SAChCrG,WAAY,UAHpB,UAOI,cAACwG,GAAA,EAAD,CAAYlE,QAAQ,KAApB,2BAGA,uBACIkD,SAAUH,EAAOoB,aADrB,UAGI,cAACC,GAAA,EAAD,CACIpE,QAAQ,WACRqE,OAAO,SACPlC,UAAQ,EACRmC,WAAS,EACT7C,GAAG,OACH8C,MAAM,OACNC,KAAK,OACL3K,KAAK,SACL2B,MAAOuH,EAAOI,OAAOqG,KACrB/E,SAAU1B,EAAO2B,aACjBlL,MAAOuJ,EAAO4B,QAAQ6E,MAAQ5E,QAAQ7B,EAAOQ,OAAOiG,MACpD3E,WAAY9B,EAAO4B,QAAQ6E,MAAQzG,EAAOQ,OAAOiG,OAErD,cAAChE,GAAA,EAAD,CACI3L,KAAK,SACLyK,WAAS,EACTtE,QAAQ,YACRT,MAAM,UAJV,4BCzCD/B,YAAOwU,KAAPxU,EAAsB,kBAAGhB,EAAH,EAAGA,MAAH,sCACnCyV,KAAqBC,kBAAqB,CAC5C3F,IAAK,GACLC,KAAM,oBACN4B,MAAO,qBAJ8B,0BAMnC6D,KAAqBE,QANc,4BAO9BF,KAAqBG,MAAS,CACjCC,YAAa,aARoB,0BAWnCJ,KAAqBK,WAXc,4BAY9BL,KAAqBG,MAAS,CACjCC,YAAa,aAboB,2BAgBlCJ,KAAqBG,MAAS,CACjCC,YAAoC,SAAvB7V,EAAM+V,QAAQC,KAAkBhW,EAAM+V,QAAQE,KAAK,KAAO,UACvEC,eAAgB,EAChBC,aAAc,IAnBuB,KAuBnBnV,YAAO,MAAPA,EACtB,gBAAGhB,EAAH,EAAGA,MAAOoW,EAAV,EAAUA,WAAV,mBAAC,aACGrT,MAA8B,SAAvB/C,EAAM+V,QAAQC,KAAkBhW,EAAM+V,QAAQE,KAAK,KAAO,UACjEhV,QAAS,OACT6R,OAAQ,GACR5R,WAAY,UACRkV,EAAWT,QAAU,CACrB5S,MAAO,YANf,IAQI,iCAAkC,CAC9BA,MAAO,UACPnB,OAAQ,EACRyU,SAAU,IAEd,0BAA2B,CACvBpW,MAAO,EACP6S,OAAQ,EACRqD,aAAc,MACdG,gBAAiB,qBAmB7B,IAAMC,GAAoBvV,YAAOwU,KAAPxU,EAAsB,kBAAGhB,EAAH,EAAGA,MAAH,sCACtCyV,KAAqBC,kBAAqB,CAC5C3F,IAAK,KAFmC,0BAItC0F,KAAqBE,QAJiB,4BAKjCF,KAAqBG,MAAS,CACjCY,gBACI,+FAPgC,0BAUtCf,KAAqBK,WAViB,4BAWjCL,KAAqBG,MAAS,CACjCY,gBACI,+FAbgC,2BAgBrCf,KAAqBG,MAAS,CACjC9C,OAAQ,EACR5C,OAAQ,EACRoG,gBAC2B,SAAvBtW,EAAM+V,QAAQC,KAAkBhW,EAAM+V,QAAQE,KAAK,KAAO,UAC9DE,aAAc,IArB0B,KAyB1CM,GAAuBzV,YAAO,MAAPA,EAE1B,gBAAGhB,EAAH,EAAGA,MAAOoW,EAAV,EAAUA,WAAV,mBAAC,aACAE,gBAAwC,SAAvBtW,EAAM+V,QAAQC,KAAkBhW,EAAM+V,QAAQE,KAAK,KAAO,OAC3ErU,OAAQ,EACRmB,MAAO,OACP9C,MAAO,GACP6S,OAAQ,GACR7R,QAAS,OACTkV,aAAc,MACdhV,eAAgB,SAChBD,WAAY,UACRkV,EAAWT,QAAU,CACrBa,gBACI,4FACJrG,UAAW,iCAEXiG,EAAWN,WAAa,CACxBU,gBACI,iGAIZ,SAASE,GAAiBxY,GAAuB,IACrCyX,EAAiCzX,EAAjCyX,OAAQG,EAAyB5X,EAAzB4X,UAAW1K,EAAclN,EAAdkN,UAErBuL,EAAiD,CACnDC,EAAG,cAAC,KAAD,IACHC,EAAG,cAAC,KAAD,IACHC,EAAG,cAAC,IAAD,KAGP,OACI,cAACL,GAAD,CAAsBL,WAAY,CAAEN,YAAWH,UAAUvK,UAAWA,EAApE,SACKuL,EAAMI,OAAO7Y,EAAM8Y,SAKhC,IAAMC,GAASjW,YAAO,MAAPA,EAAc,gBAAGhB,EAAH,EAAGA,MAAH,oBACzBiB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,QAASpB,EAAMY,QAAQ,EAAG,IAEvBZ,EAAMqB,OAAOC,YAEd4V,GAAQ,CAAC,gBAAiB,cAAe,iBAChC,SAASC,KAAY,IAC1BxE,EAAShQ,cAATgQ,KACEoB,EAAazN,qBAAWuN,IAAxBE,SACFvR,EAAUC,cAChB,OACI,eAACG,EAAA,EAAD,CAAKS,GAAI,CAAEwO,UAAW,QAAtB,UACI,cAACtQ,EAAA,EAAD,CAAQuB,SAAS,SAASC,MAAM,UAAhC,SACI,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAD,CAAKS,GAAI,CAAEE,SAAU,KACrB,cAACmE,GAAA,EAAD,CAAYlE,QAAQ,KAAKqL,UAAU,MAAMxL,GAAI,CAAEE,SAAU,GAAzD,6BAGA,cAACyF,GAAA,EAAD,CAAQ7F,QAAS,WAAQX,EAAQsB,KAAK,WAAtC,mBACA,cAAClB,EAAA,EAAD,CAAKS,GAAI,CAAEE,SAAU,UAI7B,cAAC0T,GAAD,IACA,cAACrU,EAAA,EAAD,CAAKS,GAAI,CAAEwO,UAAW,OAAQuF,cAAe,IAA7C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOxE,OAAK,EAACD,KAAI,UAAKA,GAAQ9D,UAAWwI,KACzC,cAAC,IAAD,CAAO1E,KAAI,UAAKA,EAAL,WAAoB9D,UAAWyI,KAC1C,cAAC,IAAD,CAAO3E,KAAI,UAAKA,EAAL,kBAA2B9D,UAAWoG,KACjD,cAAC,IAAD,CAAOtC,KAAI,UAAKA,EAAL,kBAA2B9D,UAAW0G,KACjD,cAAC,IAAD,CAAO5C,KAAI,UAAKA,EAAL,kBAA2B9D,UAAWwG,UAGzD,cAACkC,GAAA,EAAD,CAAOlU,GAAI,CAAEpD,MAAO,QAAUW,QAAS,EAAvC,SACI,cAAC4W,GAAA,EAAD,CAAS9B,kBAAgB,EAAC+B,WAAY1D,EAASrK,KAAMgO,UAAW,cAACnB,GAAD,IAAhE,SACKW,GAAMtO,KAAI,SAACb,GAAD,OACP,cAAC4P,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAWC,kBAAmBnB,GAA9B,SAAiD3O,KAD1CA,a,4CCpJ7BkP,GAASjW,YAAO,MAAPA,EAAc,kBAAgB,CACzCC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBC,QAJyB,EAAGpB,MAIbY,QAAQ,EAAG,OAyBf,SAASkX,KAAQ,IAAD,EACKlK,mBAA6B,MADlC,mBAGnBxP,GAHmB,UAGVkI,qBAAWvI,GAApBK,MAHmB,EAaGwP,oBAAS,GAbZ,mBAapBmK,EAboB,KAaXC,EAbW,KAc3BlR,qBAAU,WACNkR,GAAW,KACZ,IAMH,IAAMxV,EAAUC,cAEhB,OADA8C,QAAQC,IAAIpH,GAGR,qCACI,cAACyE,EAAA,EAAD,IACA,eAACD,EAAA,EAAD,CAAKS,GAAI,CAAEE,SAAU,GAArB,UACI,cAAChC,EAAA,EAAD,CAAQuB,SAAS,SAASC,MAAM,UAAhC,SACI,eAACC,EAAA,EAAD,WACI,cAAC0E,GAAA,EAAD,CAAYlE,QAAQ,KAAKqL,UAAU,MAAMxL,GAAI,CAAEE,SAAU,EAAG8S,SAAU,GAAI4B,WAAY,YAAaC,UAAW,SAAUC,WAAY,QAAUpV,MAAM,UAApJ,6BAGA,cAACE,EAAA,EAAD,UACI,cAACmV,GAAA,EAAD,CAAYtI,MAAO,CAAE/M,MAAO,QAASsT,SAAU,YASnD,eAACkB,GAAA,EAAD,CAAO3W,QAAS,EAAG6C,UAAU,MAAMJ,GAAI,CAAEC,YAAa,GAAtD,WACqB,SAAflF,EAAKtB,OAAmC,OAAfsB,EAAKtB,QAAoB,cAACkM,GAAA,EAAD,CAAQ7F,QAAS,WAAQX,EAAQsB,KAAK,UAAYN,QAAQ,WAAWH,GAAI,CAAE8S,aAAc,IAAzF,qBACnC,SAAf/X,EAAKtB,OAAmC,OAAfsB,EAAKtB,QAAoB,cAACkM,GAAA,EAAD,CAAQ7F,QAAS,WAAQX,EAAQsB,KAAK,aAAeN,QAAQ,YAAYH,GAAI,CAAE8S,aAAc,IAA7F,qBACnC,SAAf/X,EAAKtB,OAAmC,OAAfsB,EAAKtB,OAAoB,cAACkM,GAAA,EAAD,CAAQ7F,QAAS,WAAQX,EAAQsB,KAAK,YAAcN,QAAQ,YAAYH,GAAI,CAAE8S,aAAc,IAA5F,+BAMhE,cAAC,GAAD,IACA,qCACI,cAACvT,EAAA,EAAD,CAAKS,GAAI,CAAEE,SAAU,GAArB,SACI,eAACwN,GAAA,EAAD,CAAMC,WAAS,EAACpQ,QAAS,EAAzB,UACI,cAACmQ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAGI,cAACtO,EAAA,EAAD,CAAKyV,EAAE,OAAOhV,GAAI,CACdpD,MAAO,OACP6S,OAAQ,OACR0D,gBAAiB,0LACjB8B,mBAAoB,OACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,GAAI,OAQZ,cAAC1H,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7N,GAAI,CAAEqV,MAAO,QAASvX,eAAgB,UAAxD,SAEI,cAACwX,GAAA,EAAD,yBACIC,GAAIb,GACCA,EAAU,CAAEc,QAAS,KAAS,IAFvC,aAKI,eAACnR,GAAA,EAAD,CAAYlE,QAAQ,KAAKT,MAAM,UAAUM,GAAI,CAAEyV,GAAI,EAAGvV,SAAU,EAAGR,MAAO,QAASsT,SAAU,GAAI6B,UAAW,SAAUD,WAAY,YAAaE,WAAY,OAAQhX,eAAgB,SAAUD,WAAY,UAAzM,iEAEI,qBAAK4O,MAAO,CAAEiJ,WAAY,EAAG1C,SAAU,GAAI6B,UAAW,SAAUnV,MAAO,QAAvE,qDAUpB,cAACH,EAAA,EAAD,CAAKyV,EAAE,OAAOpX,QAAQ,OAAOoC,GAAI,CAAEgN,UAAW,KAA9C,SAEI,eAACjJ,GAAA,EAAD,CAAO4R,UAAW,GAAI3V,GAAI,CACtBlC,eAAgB,SAChBkP,UAAW,IACXnP,WAAY,SACZjB,MAAO,OACP6S,OAAQ,OACRxD,QAAS,SANb,UAaI,cAAC5H,GAAA,EAAD,CAAYlE,QAAQ,KAAKH,GAAI,CAAEnC,WAAY,SAAUmV,SAAU,GAAI4C,GAAI,GAAIC,GAAI,EAAG/X,eAAgB,SAAUoC,SAAU,EAAG+D,QAAS,QAAlI,uCACA,cAAC1E,EAAA,EAAD,CAAKS,GAAI,CAAE4V,GAAI,GAAIC,GAAI,GAAKpW,SAAS,SAArC,SACI,cAACkG,GAAA,EAAD,CAAQ7F,QAAS,WAAQX,EAAQsB,KAAK,WAAaN,QAAQ,WAAWH,GAAI,CAAE8S,aAAc,GAAIjV,WAAY,UAA1G,2BAEJ,eAACwG,GAAA,EAAD,CAAYlE,QAAQ,KAAKH,GAAI,CAAEnC,WAAY,SAAU+X,GAAI,GAAIC,GAAI,EAAG/X,eAAgB,SAAUoC,SAAU,EAAG+D,QAAS,QAApH,uEAEI,qBAAKwI,MAAO,CAAE5O,WAAY,SAAUC,eAAgB,SAAUoC,SAAU,GAAxE,+EAKJ,cAACX,EAAA,EAAD,CAAKS,GAAI,CAAE4V,GAAI,GAAIC,GAAI,GAAvB,SACI,cAAClQ,GAAA,EAAD,CAAQxF,QAAQ,YAAYH,GAAI,CAAE8S,aAAc,GAAIjV,WAAY,SAAU+X,GAAI,GAA9E,kCAMhB,mCAEI,cAAC7R,GAAA,EAAD,CAAO/D,GAAI,CAAEgN,UAAW,IAAK8I,GAAI,IAAjC,SACI,eAACpI,GAAA,EAAD,CAAMC,WAAS,EAACpQ,QAAS,EAAzB,UAEI,cAACmQ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACE,GAAA,EAAD,CAAM/N,GAAI,CAAEgE,SAAU,KAAtB,SACI,eAAC+R,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIxK,UAAU,MACViE,OAAO,MACPwG,MAAM,mBACNzN,IAAI,kBAER,eAACwF,GAAA,EAAD,WACI,cAAC3J,GAAA,EAAD,CAAY4J,cAAY,EAAC9N,QAAQ,KAAKqL,UAAU,MAAhD,kCAGA,cAACnH,GAAA,EAAD,CAAYlE,QAAQ,QAAQT,MAAM,iBAAlC,iEAQhB,cAACgO,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACE,GAAA,EAAD,CAAM/N,GAAI,CAAEgE,SAAU,KAAtB,SACI,eAAC+R,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIxK,UAAU,MACViE,OAAO,MACPwG,MAAM,qBACNzN,IAAI,kBAER,eAACwF,GAAA,EAAD,WACI,cAAC3J,GAAA,EAAD,CAAY4J,cAAY,EAAC9N,QAAQ,KAAKqL,UAAU,MAAhD,0BAGA,cAACnH,GAAA,EAAD,CAAYlE,QAAQ,QAAQT,MAAM,iBAAlC,4DAQhB,cAACgO,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACE,GAAA,EAAD,CAAM/N,GAAI,CAAEgE,SAAU,KAAtB,SACI,eAAC+R,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIxK,UAAU,MACViE,OAAO,MACPwG,MAAM,qBACNzN,IAAI,kBAER,eAACwF,GAAA,EAAD,WACI,cAAC3J,GAAA,EAAD,CAAY4J,cAAY,EAAC9N,QAAQ,KAAKqL,UAAU,MAAhD,4BAGA,cAACnH,GAAA,EAAD,CAAYlE,QAAQ,QAAQT,MAAM,iBAAlC,+ECrO7B2P,OAbf,WACI,OACI,qCACI,cAAC7P,EAAA,EAAD,IACA,cAAC,IAAD,CAAO+P,OAAK,EAACD,KAAK,IAAI9D,UAAWiJ,KACjC,cAAC,IAAD,CAAOnF,KAAK,SAAS9D,UAAWgE,KAChC,cAAC,GAAD,UACI,cAAC,IAAD,CAAOF,KAAK,YAAY9D,UAAWyI,OAEvC,cAAC,GAAD,QC6BGiC,GAnCH,WAAO,IAAD,EACgCjT,qBAAWvI,GAAnDK,EADQ,EACRA,KAAMkB,EADE,EACFA,eAAgBK,EADd,EACcA,cACxB6Z,EAAWC,YAAY,CAC3B1D,QAAS,CACP9R,QAAS,CACPyV,KAAM,cAQZ,OAJA5S,qBAAU,WACRnH,IACAL,MACC,IAED,cAAC,IAAD,UACE,cAACqa,EAAA,EAAD,CAAe3Z,MAAOwZ,EAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7G,KAAK,WAAZ,SACkB,SAAfvU,EAAKtB,MACJ,mCACE,cAAC,GAAD,MAGF,mCAAE,cAAC,IAAD,CAAU8c,GAAG,eAGnB,cAAC,IAAD,CAAOjH,KAAK,IAAZ,SACE,cAAC,GAAD,cC5BZkH,IAASC,OACL,cAAC,IAAMC,WAAP,UAEI,cAAE,EAAF,UACI,cAAC,KAAD,CAAkBC,SAAU,EAA5B,SACI,cAAC,GAAD,UAKVC,SAASC,eAAe,W","file":"static/js/main.e4cba431.chunk.js","sourcesContent":["export const updateObject = (oldObject: any, updatedProperties: any): any => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n","// authentication actions\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import { updateObject } from '../utility'\nimport * as actionTypes from '../actionTypes/auth'\nimport { IAuth, IAuthAction } from '../models/auth'\n\nexport const initialState: IAuth = {\n    token: null,\n    email: null,\n    error: null,\n    loading: false,\n}\n\nconst authStart = (state: IAuth, action: IAuthAction) => {\n    return updateObject(state, {\n        error: null,\n        loading: true,\n        token: null,\n        email: null\n    })\n}\n\nconst authSuccess = (state: IAuth, action: IAuthAction) => {\n    return updateObject(state, {\n        error: null,\n        token: action.token,\n        email: action.email,\n        loading: false,\n    })\n}\n\nconst authFail = (state: IAuth, action: IAuthAction) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        token: null,\n        email: null\n    })\n}\n\nconst authLogout = (state: IAuth, action: IAuthAction) => {\n    return updateObject(state, {\n        token: null,\n        email: null,\n        error: null,\n        loading: false,\n    })\n}\n\nconst reducer = (state: IAuth, action: IAuthAction): IAuth => {\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action)\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","let DEBUG: boolean = false\nlet LOGIN_URL: string = \"https://ed.asteriskint.group/api/login\";\nlet REGISTER_URL: string = \"https://ed.asteriskint.group/api/register\";\nlet HOST_URL: string = \"https://ed.asteriskint.group/api/\";\nlet PAYMENT_URL = \"https://ed.asteriskint.group/api/payment\";\nlet BASE_URL = \"https://ed.asteriskint.group/\";\nif (DEBUG) {\n  LOGIN_URL = \"http://localhost:8000/api/login/\";\n  REGISTER_URL = \"http://localhost:8000/api/register\";\n  HOST_URL = \"http://localhost:8000/api/\";\n  PAYMENT_URL = \"http://localhost:8000/api/payment\";\n  BASE_URL = \"http://localhost:8000/\"\n}\n\nexport { HOST_URL, LOGIN_URL, REGISTER_URL, PAYMENT_URL, BASE_URL,DEBUG };\n","import { useReducer, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/auth'\nimport axios from 'axios'\nimport * as actionTypes from '../actionTypes/auth'\nimport { IAuth, IAuthAction } from '../models/auth'\nimport { BASE_URL, LOGIN_URL, HOST_URL } from '../../config/settings'\n\nexport const AuthContext = createContext<IAuth | any>(initialState);\n\nconst AuthContextProvider = (props: any): JSX.Element => {\n\n    const [auth, authDispatch] = useReducer(reducer, initialState)\n\n    const authStart = (): IAuthAction => {\n        return {\n            type: actionTypes.AUTH_START,\n            error: null,\n            token: null,\n            email: null,\n        }\n    }\n\n    const authSuccess = (email: string, token: string): IAuthAction => {\n        return {\n            type: actionTypes.AUTH_SUCCESS,\n            token: token,\n            email: email,\n            error: null,\n        }\n    }\n\n    const authFail = (error: string): IAuthAction => {\n        return {\n            type: actionTypes.AUTH_FAIL,\n            error: error,\n            email: null,\n            token: null,\n        }\n    }\n\n    const login = (email: string, password: string) => {\n        authDispatch(authStart())\n        // if(DEBUG){\n        // axios.defaults.withCredentials = true   \n        // }\n        axios.post(`${LOGIN_URL}`, {\n            email: email,\n            password: password\n        }).then(res => {\n            const token = res.data.token;\n            if (res.data.token) {\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem('email', email)\n                authDispatch(authSuccess(email, token))\n            } else {\n                authDispatch(authFail(res.data.message))\n            }\n        }).catch(err => {\n            authDispatch(authFail(err))\n        })\n    }\n    const logout = (): IAuthAction => {\n\n        localStorage.removeItem('token')\n        localStorage.removeItem('email')\n        localStorage.removeItem('expirationDate')\n\n        axios.post(`${LOGIN_URL}`).then(res => {\n            \n        }).catch(err => {\n            authDispatch(authFail(\"Failed to logout\"))\n        })\n\n        return {\n            type: actionTypes.AUTH_LOGOUT,\n            email: null,\n            error: null,\n            token: null,\n        }\n    }\n\n    const getCsrfCookie = () => {\n        axios.get(`${BASE_URL}sanctum/csrf-cookie`).then(res => {\n            // console.log(\"from context\")\n            // console.log(res)\n        })\n    }\n    const authCheckState = () => {\n        authDispatch(authStart())\n        const token: string = JSON.stringify(localStorage.getItem(\"token\"))\n        const email: string = JSON.stringify(localStorage.getItem('email'))\n        if (token === undefined) {\n            authDispatch(logout())\n        } else {\n            authDispatch(authSuccess(email, token))\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{ auth, login, logout, authCheckState, getCsrfCookie }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider","import * as React from 'react'\nimport { styled, useTheme, Theme, CSSObject } from '@mui/material/styles'\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport { ListItemText, ListItemIcon, ListItem, IconButton, Divider, Badge, List, Toolbar, Box } from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline'\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { useHistory, useRouteMatch } from \"react-router-dom\"\nimport { AuthContext } from \"../../../../store/context/auth\"\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: 'hidden',\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && {\n      ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme),\n    }),\n    ...(!open && {\n      ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme),\n    }),\n  }),\n);\n\nexport default function MiniDrawer() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory()\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  let { url } = useRouteMatch()\n  const { logout } = React.useContext(AuthContext)\n  return (\n    <Box>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open} color=\"inherit\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{\n              marginRight: '36px',\n              ...(open && { display: 'none' }),\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Box sx={{ flexGrow: 1 }}></Box>\n          {/* <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n            >\n              <Badge badgeContent={17} color=\"error\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              // aria-controls={menuId}\n              aria-haspopup=\"true\"\n              // onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </Box> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer variant=\"permanent\" open={open}>\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          <ListItem button onClick={() => { history.push(url) }}>\n            <ListItemIcon>\n            <AccountBalanceWalletIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Wallet\" />\n          </ListItem>\n          {/* <ListItem button onClick={() => { history.push(`${url}/transactions`) }}>\n            <ListItemIcon>\n              <ReceiptIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Transaction\" />\n          </ListItem> */}\n          {/* <ListItem button onClick={() => { history.push(`${url}/statistics`) }}>\n            <ListItemIcon>\n              <AssessmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Statistics\" />\n          </ListItem>\n          <Divider />\n          <ListItem button onClick={() => { history.push(`${url}/settings`) }}>\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Setting\" />\n          </ListItem> */}\n          <ListItem button onClick={() => {\n            logout()\n            history.push('/')\n            window.location.reload()\n          }}>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Logout\" />\n          </ListItem>\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n","// authentication actions\nexport const SEND_START = 'SEND_START'\nexport const SEND_SUCCESS = 'SEND_SUCCESS'\nexport const SEND_FAIL = 'SEND_FAIL'","import { updateObject } from '../utility'\nimport * as actionTypes from '../actionTypes/send'\nimport { ISend, ISendAction } from '../models/send'\n\nexport const initialState: ISend = {\n    error: null,\n    success: null,\n    loading: false,\n}\n\nconst sendStart = (state: ISend, action: ISendAction): ISend => {\n    return updateObject(state, {\n        loading: true,\n    })\n}\nconst sendSuccess = (state: ISend, action: ISendAction): ISend => {\n    return updateObject(state, {\n        success: action.success,\n        loading: false,\n        error: null\n    })\n}\n\nconst sendFail = (state: ISend, action: ISendAction): ISend => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: null\n    })\n}\n\nconst reducer = (state: ISend, action: ISendAction): ISend => {\n    switch (action.type) {\n        case actionTypes.SEND_START:\n            return sendStart(state, action)\n        case actionTypes.SEND_FAIL:\n            return sendFail(state, action)\n        case actionTypes.SEND_SUCCESS:\n            return sendSuccess(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { useReducer, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/send'\nimport axios from 'axios'\nimport * as actionTypes from '../actionTypes/send'\nimport { ISend, ISendAction } from '../models/send'\nimport { HOST_URL } from '../../config/settings'\n\nexport const SendContext = createContext<ISend | any>(initialState);\n\nconst SendContextProvider = (props: any): JSX.Element => {\n\n    const [send, sendDispatch] = useReducer(reducer, initialState)\n\n    const sendStart = (): ISendAction => {\n        return {\n            type: actionTypes.SEND_START,\n            error: null,\n            success: null\n        }\n    }\n\n    const sendFail = (error: string): ISendAction => {\n        return {\n            type: actionTypes.SEND_FAIL,\n            error: error,\n            success: null\n        }\n    }\n\n    const sendSuccess = (success: string): ISendAction => {\n        return {\n            type: actionTypes.SEND_SUCCESS,\n            error: null,\n            success\n        }\n    }\n\n    const sendWallet = (id: string, amount: number) => {\n        sendDispatch(sendStart())\n        // axios.defaults.withCredentials = true\n        const token = localStorage.getItem('token')\n        if (token) {\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.post(`${HOST_URL}wallet/transfer/`, {\n                phone_number: id,\n                amount\n            }, config)\n                .then(res => {\n                    console.log(res)\n                    sendDispatch(sendSuccess(\"Amount Sent Successfully\"))\n                })\n                .catch(err => {\n                    console.log(err)\n                    sendDispatch(sendFail(\"Something Went wrong\"))\n                })\n        } else {\n            sendDispatch(sendFail(\"You Needed to be Authenticated\"))\n        }\n    }\n    return (\n        <SendContext.Provider value={{ send, sendWallet }}>\n            {props.children}\n        </SendContext.Provider>\n    )\n}\n\nexport default SendContextProvider","import { FormControl, InputLabel, MenuItem, Select, TextField, Typography, Paper, Box, Avatar, Button, LinearProgress } from '@mui/material'\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nimport \"yup-phone\";\nimport { SendContext } from '../../../../../../store/context/send'\nimport { useContext, useEffect } from 'react';\nimport axios from 'axios'\nimport useSwr from 'swr'\nimport { HOST_URL } from \"../../../../../../config/settings\"\nconst validationSchema = yup.object({\n    amount: yup\n        .number()\n        .required('Amount is required'),\n    type: yup\n        .string()\n        .min(2, \"Name must be greater than 2\")\n        .required('Type is required'),\n    mobile: yup\n        .string()\n        .when(\"type\", {\n            is: \"mobile\",\n            then: yup.string().phone()\n        }),\n    beneficiary: yup\n        .string()\n        .when(\"type\", {\n            is: \"beneficiary\",\n            then: yup.string()\n        }),\n});\nconst token = localStorage.getItem('token')\nconst config = {\n    headers: { Authorization: `Bearer ${token}` },\n    withCredentials: true\n};\nconst fetcher = (url: string) => axios.get(url, config).then(res => res.data)\nexport default function SelectMethod() {\n    const { data } = useSwr(`${HOST_URL}beneficiaries/list`, fetcher)\n    const { send, sendWallet } = useContext(SendContext)\n    const formik = useFormik({\n        initialValues: {\n            amount: \"\",\n            type: \"\",\n            mobile: \"\",\n            beneficiary: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            if (values.type === \"beneficiary\") {\n                sendWallet(values.beneficiary, values.amount)\n            }\n        },\n    });\n    const history = useHistory()\n    const { enqueueSnackbar } = useSnackbar()\n    useEffect(() => {\n        if (send.success) {\n            enqueueSnackbar(send.success, {\n                variant: 'success',\n            })\n            history.push(\"/console\");\n        }\n        if (send.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(send.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(send.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [send])\n    console.log(data)\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <CreditCardIcon />\n                    </Avatar>\n                    <Typography variant=\"h5\">\n                        Send Money\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"amount\"\n                            label=\"Amount\"\n                            name=\"amount\"\n                            type=\"text\"\n                            value={formik.values.amount}\n                            onChange={formik.handleChange}\n                            error={formik.touched.amount && Boolean(formik.errors.amount)}\n                            helperText={formik.touched.amount && formik.errors.amount}\n                        />\n                        <FormControl\n                            fullWidth\n                            margin=\"normal\"\n                        >\n                            <InputLabel id=\"type-label\">Type</InputLabel>\n                            <Select\n                                labelId=\"type-label\"\n                                id=\"type\"\n                                name=\"type\"\n                                label=\"Type\"\n                                value={formik.values.type}\n                                onChange={formik.handleChange}\n                                error={formik.touched.type && Boolean(formik.errors.type)}\n                            >\n                                <MenuItem value=\"beneficiary\">Beneficiary</MenuItem>\n                                <MenuItem value=\"mobile\">Mobile Number</MenuItem>\n                            </Select>\n                        </FormControl>\n                        {formik.values.type === \"beneficiary\" && (\n                            <FormControl\n                                fullWidth\n                                margin=\"normal\"\n                            >\n                                <InputLabel id=\"beneficiary-label\">Select Beneficiary</InputLabel>\n                                <Select\n                                    labelId=\"beneficiary-label\"\n                                    id=\"beneficiary\"\n                                    name=\"beneficiary\"\n                                    label=\"Beneficiary\"\n                                    value={formik.values.beneficiary}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.beneficiary && Boolean(formik.errors.beneficiary)}\n                                >\n                                    {data && data.beneficiaries.map((beneficiary: any) => {\n                                        return (\n                                            <MenuItem key={beneficiary.phone_number} value={beneficiary.id}>{beneficiary.first_name + \" \" + beneficiary.last_name}</MenuItem>\n                                        )\n                                    })}\n                                </Select>\n                            </FormControl>\n                        )}\n                        {formik.values.type === \"mobile\" && (\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id=\"mobile\"\n                                label=\"Mobile No\"\n                                placeholder=\"eg... +18884521505\"\n                                name=\"mobile\"\n                                type=\"text\"\n                                value={formik.values.mobile}\n                                onChange={formik.handleChange}\n                                error={formik.touched.mobile && Boolean(formik.errors.mobile)}\n                                helperText={formik.touched.mobile && formik.errors.mobile}\n                            />\n                        )}\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={send.loading}\n                        >\n                            Send\n                        </Button>\n                        {send.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n","// authentication actions\nexport const DEPOSIT_START = 'DEPOSIT_START'\nexport const DEPOSIT_SUCCESS = 'DEPOSIT_SUCCESS'\nexport const DEPOSIT_FAIL = 'DEPOSIT_FAIL'\nexport const DEPOSIT_CARD_SUCCESS = 'DEPOSIT_CARD_SUCCESS'","import { updateObject } from '../utility'\nimport * as actionTypes from '../actionTypes/deposit'\nimport { IDeposit, IDepositAction } from '../models/deposit'\n\nexport const initialState: IDeposit = {\n    cardNo: null,\n    expiry: null,\n    ccv: null,\n    step: 0,\n    error: null,\n    success: null,\n    loading: false,\n}\n\nconst depositStart = (state: IDeposit, action: IDepositAction): IDeposit => {\n    return updateObject(state, {\n        loading: true,\n    })\n}\n\nconst depositCardSuccess = (state: IDeposit, action: IDepositAction): IDeposit => {\n    return updateObject(state, {\n        success: action.success,\n        loading: false,\n        cardNo: action.cardNo,\n        expiry: action.expiry,\n        step: action.step,\n        ccv: action.ccv,\n    })\n}\nconst depositSuccess = (state: IDeposit, action: IDepositAction): IDeposit => {\n    return updateObject(state, {\n        success: action.success,\n        loading: false,\n        error: null\n    })\n}\n\nconst depositFail = (state: IDeposit, action: IDepositAction): IDeposit => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: null\n    })\n}\n\nconst reducer = (state: IDeposit, action: IDepositAction): IDeposit => {\n    switch (action.type) {\n        case actionTypes.DEPOSIT_START:\n            return depositStart(state, action)\n        case actionTypes.DEPOSIT_CARD_SUCCESS:\n            return depositCardSuccess(state, action)\n        case actionTypes.DEPOSIT_FAIL:\n            return depositFail(state, action)\n        case actionTypes.DEPOSIT_SUCCESS:\n            return depositSuccess(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { useReducer, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/deposit'\nimport axios from 'axios'\nimport * as actionTypes from '../actionTypes/deposit'\nimport { IDeposit, IDepositAction } from '../models/deposit'\nimport { HOST_URL } from '../../config/settings'\n\nexport const DepositContext = createContext<IDeposit | any>(initialState);\n\nconst DepositContextProvider = (props: any): JSX.Element => {\n\n    const [deposit, depositDispatch] = useReducer(reducer, initialState)\n\n    const depositStart = (): IDepositAction => {\n        return {\n            type: actionTypes.DEPOSIT_START,\n            error: null,\n            cardNo: null,\n            expiry: null,\n            ccv: null,\n            step: 0,\n            success: null\n        }\n    }\n\n    const depositCardSuccess = (cardNo: string, expiry: string, step: number, ccv: string, success: string): IDepositAction => {\n        return {\n            type: actionTypes.DEPOSIT_CARD_SUCCESS,\n            error: null,\n            cardNo,\n            expiry,\n            ccv,\n            step,\n            success\n        }\n    }\n\n    const depositFail = (error: string): IDepositAction => {\n        return {\n            type: actionTypes.DEPOSIT_FAIL,\n            error: error,\n            cardNo: null,\n            expiry: null,\n            ccv: null,\n            step: 0,\n            success: null\n        }\n    }\n\n    const depositSuccess = (success: string): IDepositAction => {\n        return {\n            type: actionTypes.DEPOSIT_SUCCESS,\n            error: null,\n            cardNo: null,\n            expiry: null,\n            ccv: null,\n            step: 0,\n            success\n        }\n    }\n\n    const insertCard = (cardNo: string, expiry: string, ccv: string) => {\n        depositDispatch(depositStart())\n        depositDispatch(depositCardSuccess(cardNo, expiry, 1, ccv, \"Card entered successfully\"))\n    }\n\n    const makeDeposit = (\n        number: number,\n        expiration_month: number,\n        expiration_year: number,\n        total_amount: number,\n        security_code: number,\n        first_name: string,\n        last_name: string,\n        address2: string,\n        address1: string,\n        postal_code: string,\n        locality: string,\n        administrative_area: string,\n        country: string,\n        email: string\n    ) => {\n        depositDispatch(depositStart())\n        const token = localStorage.getItem('token')\n        // axios.defaults.withCredentials = true\n        if (token) {\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.post(`${HOST_URL}payment`, {\n                number,\n                expiration_month,\n                expiration_year,\n                total_amount,\n                security_code,\n                first_name,\n                last_name,\n                address2,\n                address1,\n                postal_code,\n                locality,\n                administrative_area,\n                country,\n                email\n            }, config).then(res => {\n                console.log(res)\n                depositDispatch(depositSuccess(\"Deposit Added Successfully\"))\n            }).catch(err => {\n                console.log(err)\n                if (err.response.data.errors) {\n                    depositDispatch(depositFail(JSON.stringify(err.response.data.errors)))\n                } else {\n                    depositDispatch(depositFail(\"Deposit Failed\"))\n                }\n            })\n        } else {\n            depositDispatch(depositFail(\"You Needed to be Authenticated\"))\n        }\n    }\n\n    return (\n        <DepositContext.Provider value={{ deposit, insertCard, makeDeposit }}>\n            {props.children}\n        </DepositContext.Provider>\n    )\n}\n\nexport default DepositContextProvider","import \"./style.css\"\nimport { MutableRefObject, useContext, useRef } from 'react'\nimport { Box, Typography, Checkbox, FormControlLabel, Autocomplete, TextField, LinearProgress, Button } from \"@mui/material\"\nimport { useFormik } from \"formik\"\nimport * as yup from \"yup\"\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nimport { countries } from \"../../../../../shared/countries/countries\"\nimport Cleave from 'cleave.js/react';\nimport { DepositContext } from \"../../../../../../store/context/deposit\"\nconst validationSchema = yup.object({\n    cardNo: yup\n        .string()\n        .required(\"Card Number is Required\"),\n    expiry: yup\n        .string()\n        .required(\"Expiry is required\"),\n    ccv: yup\n        .string()\n        .required(\"Securty Code is required\"),\n});\nexport default function CreditCard() {\n    // const { register, create_wallet } = useContext(RegisterContext)\n    const { deposit, insertCard } = useContext(DepositContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const cardTypeRef = useRef() as MutableRefObject<HTMLDivElement>\n    const formik = useFormik({\n        initialValues: {\n            cardNo: \"\",\n            expiry: \"\",\n            ccv: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            insertCard(values.cardNo, values.expiry, values.ccv)\n        },\n    });\n    return (\n        <Box>\n            <form onSubmit={formik.handleSubmit}>\n                <Box className=\"body\">\n                    <Box className=\"card\">\n\n                        <h1 className=\"card__title\">Enter Payment Information</h1>\n                        <Box className=\"card__row\">\n                            <Box className=\"card__col\">\n                                <label htmlFor=\"cardNumber\" className=\"card__label\">Card Number</label\n                                ><Cleave\n                                    options={{\n                                        creditCard: true,\n                                        delimiter: \"-\",\n                                        onCreditCardTypeChanged: (type) => {\n                                            const visa = \"fab fa-cc-visa\"\n                                            const mastercard = \"fab fa-cc-mastercard\"\n                                            const amex = \"fab fa-cc-amex\"\n                                            const diners = \"fab fa-cc-diners-club\"\n                                            const jcb = \"fab fa-cc-jcb\"\n                                            const discover = \"fab fa-cc-discover\"\n\n                                            switch (type) {\n                                                case \"visa\":\n                                                    cardTypeRef.current.setAttribute(\"class\", visa);\n                                                    break;\n                                                case \"mastercard\":\n                                                    cardTypeRef.current.setAttribute(\"class\", mastercard);\n                                                    break;\n                                                case \"amex\":\n                                                    cardTypeRef.current.setAttribute(\"class\", amex);\n                                                    break;\n                                                case \"diners\":\n                                                    cardTypeRef.current.setAttribute(\"class\", diners)!;\n                                                    break;\n                                                case \"jcb\":\n                                                    cardTypeRef.current.setAttribute(\"class\", jcb);\n                                                    break;\n                                                case \"discover\":\n                                                    cardTypeRef.current.setAttribute(\"class\", discover);\n                                                    break;\n                                                default:\n                                                    cardTypeRef.current.setAttribute(\"class\", \"\");\n                                                    break;\n                                            }\n                                        }\n                                    }}\n                                    type=\"text\"\n                                    className=\"card__input card__input--large\"\n                                    id=\"cardNo\"\n                                    name=\"cardNo\"\n                                    placeholder=\"xxxx-xxxx-xxxx-xxxx\"\n                                    value={formik.values.cardNo}\n                                    onChange={formik.handleChange}\n                                // error={formik.touched.cardNo && Boolean(formik.errors.cardNo)}\n                                // helperText={formik.touched.cardNo && formik.errors.cardNo}\n                                />\n                            </Box>\n                            <Box className=\"card__col card__chip\">\n                                <img src=\"/images/chip.svg\" alt=\"chip\" />\n                            </Box>\n                        </Box>\n                        <Box className=\"card__row\">\n                            <Box className=\"card__col\">\n                                <label htmlFor=\"cardExpiry\" className=\"card__label\">Expiry Date</label\n                                ><Cleave\n                                    options={{\n                                        date: true,\n                                        datePattern: [\"m\", \"y\"],\n                                    }}\n                                    type=\"text\"\n                                    className=\"card__input\"\n                                    id=\"cardExpiry\"\n                                    name=\"expiry\"\n                                    placeholder=\"mm/yy\"\n                                    value={formik.values.expiry}\n                                    onChange={formik.handleChange}\n                                // error={formik.touched.expiry && Boolean(formik.errors.expiry)}\n                                // helperText={formik.touched.expiry && formik.errors.expiry}\n                                />\n                            </Box>\n                            <Box className=\"card__col\">\n                                <label htmlFor=\"cardCcv\" className=\"card__label\">CCV</label\n                                ><Cleave\n                                    options={{\n                                        blocks: [3],\n                                        numericOnly: true\n                                    }}\n                                    type=\"text\"\n                                    className=\"card__input\"\n                                    id=\"ccv\"\n                                    name=\"ccv\"\n                                    placeholder=\"xxx\"\n                                    value={formik.values.ccv}\n                                    onChange={formik.handleChange}\n                                // error={formik.touched.ccv && Boolean(formik.errors.ccv)}\n                                // helperText={formik.touched.ccv && formik.errors.ccv}\n                                />\n                            </Box>\n                            <Box className=\"card__col card__brand\"><i ref={cardTypeRef} id=\"cardBrand\"></i></Box>\n                        </Box>\n\n                    </Box>\n                </Box>\n\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    fullWidth\n                    sx={{\n                        color: \"white\",\n                        marginX: \"auto\",\n                        marginTop: 10\n                    }}\n                    disabled={deposit.loading}\n                >\n                    Next\n                </Button>\n                {deposit.loading && (\n                    <LinearProgress />\n                )}\n            </form>\n        </Box>\n    )\n}\n","// authentication actions\nexport const BENEFICIARY_START = 'BENEFICIARY_START'\nexport const BENEFICIARY_SUCCESS = 'BENEFICIARY_SUCCESS'\nexport const BENEFICIARY_FAIL = 'BENEFICIARY_FAIL'","import { updateObject } from '../utility'\nimport * as actionTypes from '../actionTypes/beneficiary'\nimport { IBeneficiary, IBeneficiaryAction } from '../models/beneficiary'\n\nexport const initialState: IBeneficiary = {\n    error: null,\n    success: null,\n    loading: false,\n}\n\nconst beneficiaryStart = (state: IBeneficiary, action: IBeneficiaryAction): IBeneficiary => {\n    return updateObject(state, {\n        loading: true,\n        error: null,\n        success: null,\n    })\n}\n\nconst beneficiarySuccess = (state: IBeneficiary, action: IBeneficiaryAction): IBeneficiary => {\n    return updateObject(state, {\n        success: action.success,\n        loading: false,\n        error: null,\n    })\n}\n\nconst beneficiaryFail = (state: IBeneficiary, action: IBeneficiaryAction): IBeneficiary => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: null\n    })\n}\n\nconst reducer = (state: IBeneficiary, action: IBeneficiaryAction): IBeneficiary => {\n    switch (action.type) {\n        case actionTypes.BENEFICIARY_START:\n            return beneficiaryStart(state, action)\n        case actionTypes.BENEFICIARY_SUCCESS:\n            return beneficiarySuccess(state, action)\n        case actionTypes.BENEFICIARY_FAIL:\n            return beneficiaryFail(state, action)\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { useReducer, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/beneficiary'\nimport axios from 'axios'\nimport * as actionTypes from '../actionTypes/beneficiary'\nimport { IBeneficiary, IBeneficiaryAction } from '../models/beneficiary'\nimport { HOST_URL } from '../../config/settings'\n\nexport const BeneficiaryContext = createContext<IBeneficiary | any>(initialState);\n\nconst BeneficiaryContextProvider = (props: any): JSX.Element => {\n\n    const [beneficiary, beneficiaryDispatch] = useReducer(reducer, initialState)\n\n    const beneficiaryStart = (): IBeneficiaryAction => {\n        return {\n            type: actionTypes.BENEFICIARY_START,\n            error: null,\n            success: null\n        }\n    }\n\n    const beneficiarySuccess = (success: string): IBeneficiaryAction => {\n        return {\n            type: actionTypes.BENEFICIARY_SUCCESS,\n            error: null,\n            success\n        }\n    }\n\n    const beneficiaryFail = (error: string): IBeneficiaryAction => {\n        return {\n            type: actionTypes.BENEFICIARY_FAIL,\n            error: error,\n            success: null\n        }\n    }\n\n    const create = (phone: string, first_name: string, last_name: string) => {\n        beneficiaryDispatch(beneficiaryStart())\n        // axios.defaults.withCredentials = true\n        const token = localStorage.getItem('token')\n        if (token) {\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.post(`${HOST_URL}beneficiary/create`, {\n                first_name,\n                last_name,\n                phone_number:phone\n            }, config).then(res => {\n                beneficiaryDispatch(beneficiarySuccess(\"Beneficiary Added Successfully\"))\n            }).catch(err => {\n                if (err.response.data.errors) {\n                    beneficiaryDispatch(beneficiaryFail(JSON.stringify(err.response.data.errors)))\n                } else {\n                    beneficiaryDispatch(beneficiaryFail(\"Beneficiary Create Failed Failed\"))\n                }\n            })\n        } else {\n            beneficiaryDispatch(beneficiaryFail(\"You Needed to be Authenticated\"))\n        }\n    }\n\n    return (\n        <BeneficiaryContext.Provider value={{ beneficiary, create }}>\n            {props.children}\n        </BeneficiaryContext.Provider>\n    )\n}\n\nexport default BeneficiaryContextProvider","\nimport React, { useContext, useEffect } from 'react'\nimport { LinearProgress, Avatar, Typography, Button, Box, Paper, TextField } from '@mui/material'\nimport { BeneficiaryContext } from \"../../../../../../store/context/beneficiary\"\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nimport AddIcon from '@mui/icons-material/Add'\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport \"yup-phone\";\nconst validationSchema = yup.object({\n    phone: yup\n        .string()\n        .phone()\n        .required('Phone is required'),\n    first_name: yup\n        .string()\n        .min(2, \"Name must be greater than 2\")\n        .required('Phone is required'),\n    last_name: yup\n        .string()\n        .min(2, \"Name must be greater than 2\")\n        .required('Phone is required'),\n});\nexport default function Beneficiary() {\n    const { beneficiary, create } = useContext(BeneficiaryContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            phone: \"\",\n            first_name: \"\",\n            last_name: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            create(values.phone, values.first_name, values.last_name)\n        },\n    });\n    useEffect(() => {\n        if (beneficiary.success) {\n            enqueueSnackbar(beneficiary.success, {\n                variant: 'success',\n            })\n            history.push(\"/console\");\n        }\n        if (beneficiary.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(beneficiary.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(beneficiary.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [beneficiary])\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <ReceiptIcon />\n                    </Avatar>\n                    <Typography variant=\"h5\">\n                        Add Beneficiary\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"first_name\"\n                            label=\"First Name\"\n                            name=\"first_name\"\n                            type=\"text\"\n                            value={formik.values.first_name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n                            helperText={formik.touched.first_name && formik.errors.first_name}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"last_name\"\n                            label=\"Last Name\"\n                            name=\"last_name\"\n                            type=\"text\"\n                            value={formik.values.last_name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n                            helperText={formik.touched.last_name && formik.errors.last_name}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"phone\"\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"eg... +18884521505\"\n                            type=\"text\"\n                            value={formik.values.phone}\n                            onChange={formik.handleChange}\n                            error={formik.touched.phone && Boolean(formik.errors.phone)}\n                            helperText={formik.touched.phone && formik.errors.phone}\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            endIcon={<AddIcon />}\n                            disabled={beneficiary.loading}\n                        >\n                            Create\n                        </Button>\n                        {beneficiary.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n","// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nexport const countries = [\n    { code: 'AD', label: 'Andorra', phone: '376' },\n    {\n        code: 'AE',\n        label: 'United Arab Emirates',\n        phone: '971',\n    },\n    { code: 'AF', label: 'Afghanistan', phone: '93' },\n    {\n        code: 'AG',\n        label: 'Antigua and Barbuda',\n        phone: '1-268',\n    },\n    { code: 'AI', label: 'Anguilla', phone: '1-264' },\n    { code: 'AL', label: 'Albania', phone: '355' },\n    { code: 'AM', label: 'Armenia', phone: '374' },\n    { code: 'AO', label: 'Angola', phone: '244' },\n    { code: 'AQ', label: 'Antarctica', phone: '672' },\n    { code: 'AR', label: 'Argentina', phone: '54' },\n    { code: 'AS', label: 'American Samoa', phone: '1-684' },\n    { code: 'AT', label: 'Austria', phone: '43' },\n    {\n        code: 'AU',\n        label: 'Australia',\n        phone: '61',\n        suggested: true,\n    },\n    { code: 'AW', label: 'Aruba', phone: '297' },\n    { code: 'AX', label: 'Alland Islands', phone: '358' },\n    { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n    {\n        code: 'BA',\n        label: 'Bosnia and Herzegovina',\n        phone: '387',\n    },\n    { code: 'BB', label: 'Barbados', phone: '1-246' },\n    { code: 'BD', label: 'Bangladesh', phone: '880' },\n    { code: 'BE', label: 'Belgium', phone: '32' },\n    { code: 'BF', label: 'Burkina Faso', phone: '226' },\n    { code: 'BG', label: 'Bulgaria', phone: '359' },\n    { code: 'BH', label: 'Bahrain', phone: '973' },\n    { code: 'BI', label: 'Burundi', phone: '257' },\n    { code: 'BJ', label: 'Benin', phone: '229' },\n    { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n    { code: 'BM', label: 'Bermuda', phone: '1-441' },\n    { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n    { code: 'BO', label: 'Bolivia', phone: '591' },\n    { code: 'BR', label: 'Brazil', phone: '55' },\n    { code: 'BS', label: 'Bahamas', phone: '1-242' },\n    { code: 'BT', label: 'Bhutan', phone: '975' },\n    { code: 'BV', label: 'Bouvet Island', phone: '47' },\n    { code: 'BW', label: 'Botswana', phone: '267' },\n    { code: 'BY', label: 'Belarus', phone: '375' },\n    { code: 'BZ', label: 'Belize', phone: '501' },\n    {\n        code: 'CA',\n        label: 'Canada',\n        phone: '1',\n        suggested: true,\n    },\n    {\n        code: 'CC',\n        label: 'Cocos (Keeling) Islands',\n        phone: '61',\n    },\n    {\n        code: 'CD',\n        label: 'Congo, Democratic Republic of the',\n        phone: '243',\n    },\n    {\n        code: 'CF',\n        label: 'Central African Republic',\n        phone: '236',\n    },\n    {\n        code: 'CG',\n        label: 'Congo, Republic of the',\n        phone: '242',\n    },\n    { code: 'CH', label: 'Switzerland', phone: '41' },\n    { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n    { code: 'CK', label: 'Cook Islands', phone: '682' },\n    { code: 'CL', label: 'Chile', phone: '56' },\n    { code: 'CM', label: 'Cameroon', phone: '237' },\n    { code: 'CN', label: 'China', phone: '86' },\n    { code: 'CO', label: 'Colombia', phone: '57' },\n    { code: 'CR', label: 'Costa Rica', phone: '506' },\n    { code: 'CU', label: 'Cuba', phone: '53' },\n    { code: 'CV', label: 'Cape Verde', phone: '238' },\n    { code: 'CW', label: 'Curacao', phone: '599' },\n    { code: 'CX', label: 'Christmas Island', phone: '61' },\n    { code: 'CY', label: 'Cyprus', phone: '357' },\n    { code: 'CZ', label: 'Czech Republic', phone: '420' },\n    {\n        code: 'DE',\n        label: 'Germany',\n        phone: '49',\n        suggested: true,\n    },\n    { code: 'DJ', label: 'Djibouti', phone: '253' },\n    { code: 'DK', label: 'Denmark', phone: '45' },\n    { code: 'DM', label: 'Dominica', phone: '1-767' },\n    {\n        code: 'DO',\n        label: 'Dominican Republic',\n        phone: '1-809',\n    },\n    { code: 'DZ', label: 'Algeria', phone: '213' },\n    { code: 'EC', label: 'Ecuador', phone: '593' },\n    { code: 'EE', label: 'Estonia', phone: '372' },\n    { code: 'EG', label: 'Egypt', phone: '20' },\n    { code: 'EH', label: 'Western Sahara', phone: '212' },\n    { code: 'ER', label: 'Eritrea', phone: '291' },\n    { code: 'ES', label: 'Spain', phone: '34' },\n    { code: 'ET', label: 'Ethiopia', phone: '251' },\n    { code: 'FI', label: 'Finland', phone: '358' },\n    { code: 'FJ', label: 'Fiji', phone: '679' },\n    {\n        code: 'FK',\n        label: 'Falkland Islands (Malvinas)',\n        phone: '500',\n    },\n    {\n        code: 'FM',\n        label: 'Micronesia, Federated States of',\n        phone: '691',\n    },\n    { code: 'FO', label: 'Faroe Islands', phone: '298' },\n    {\n        code: 'FR',\n        label: 'France',\n        phone: '33',\n        suggested: true,\n    },\n    { code: 'GA', label: 'Gabon', phone: '241' },\n    { code: 'GB', label: 'United Kingdom', phone: '44' },\n    { code: 'GD', label: 'Grenada', phone: '1-473' },\n    { code: 'GE', label: 'Georgia', phone: '995' },\n    { code: 'GF', label: 'French Guiana', phone: '594' },\n    { code: 'GG', label: 'Guernsey', phone: '44' },\n    { code: 'GH', label: 'Ghana', phone: '233' },\n    { code: 'GI', label: 'Gibraltar', phone: '350' },\n    { code: 'GL', label: 'Greenland', phone: '299' },\n    { code: 'GM', label: 'Gambia', phone: '220' },\n    { code: 'GN', label: 'Guinea', phone: '224' },\n    { code: 'GP', label: 'Guadeloupe', phone: '590' },\n    { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n    { code: 'GR', label: 'Greece', phone: '30' },\n    {\n        code: 'GS',\n        label: 'South Georgia and the South Sandwich Islands',\n        phone: '500',\n    },\n    { code: 'GT', label: 'Guatemala', phone: '502' },\n    { code: 'GU', label: 'Guam', phone: '1-671' },\n    { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n    { code: 'GY', label: 'Guyana', phone: '592' },\n    { code: 'HK', label: 'Hong Kong', phone: '852' },\n    {\n        code: 'HM',\n        label: 'Heard Island and McDonald Islands',\n        phone: '672',\n    },\n    { code: 'HN', label: 'Honduras', phone: '504' },\n    { code: 'HR', label: 'Croatia', phone: '385' },\n    { code: 'HT', label: 'Haiti', phone: '509' },\n    { code: 'HU', label: 'Hungary', phone: '36' },\n    { code: 'ID', label: 'Indonesia', phone: '62' },\n    { code: 'IE', label: 'Ireland', phone: '353' },\n    { code: 'IL', label: 'Israel', phone: '972' },\n    { code: 'IM', label: 'Isle of Man', phone: '44' },\n    { code: 'IN', label: 'India', phone: '91' },\n    {\n        code: 'IO',\n        label: 'British Indian Ocean Territory',\n        phone: '246',\n    },\n    { code: 'IQ', label: 'Iraq', phone: '964' },\n    {\n        code: 'IR',\n        label: 'Iran, Islamic Republic of',\n        phone: '98',\n    },\n    { code: 'IS', label: 'Iceland', phone: '354' },\n    { code: 'IT', label: 'Italy', phone: '39' },\n    { code: 'JE', label: 'Jersey', phone: '44' },\n    { code: 'JM', label: 'Jamaica', phone: '1-876' },\n    { code: 'JO', label: 'Jordan', phone: '962' },\n    {\n        code: 'JP',\n        label: 'Japan',\n        phone: '81',\n        suggested: true,\n    },\n    { code: 'KE', label: 'Kenya', phone: '254' },\n    { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n    { code: 'KH', label: 'Cambodia', phone: '855' },\n    { code: 'KI', label: 'Kiribati', phone: '686' },\n    { code: 'KM', label: 'Comoros', phone: '269' },\n    {\n        code: 'KN',\n        label: 'Saint Kitts and Nevis',\n        phone: '1-869',\n    },\n    {\n        code: 'KP',\n        label: \"Korea, Democratic People's Republic of\",\n        phone: '850',\n    },\n    { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n    { code: 'KW', label: 'Kuwait', phone: '965' },\n    { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n    { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n    {\n        code: 'LA',\n        label: \"Lao People's Democratic Republic\",\n        phone: '856',\n    },\n    { code: 'LB', label: 'Lebanon', phone: '961' },\n    { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n    { code: 'LI', label: 'Liechtenstein', phone: '423' },\n    { code: 'LK', label: 'Sri Lanka', phone: '94' },\n    { code: 'LR', label: 'Liberia', phone: '231' },\n    { code: 'LS', label: 'Lesotho', phone: '266' },\n    { code: 'LT', label: 'Lithuania', phone: '370' },\n    { code: 'LU', label: 'Luxembourg', phone: '352' },\n    { code: 'LV', label: 'Latvia', phone: '371' },\n    { code: 'LY', label: 'Libya', phone: '218' },\n    { code: 'MA', label: 'Morocco', phone: '212' },\n    { code: 'MC', label: 'Monaco', phone: '377' },\n    {\n        code: 'MD',\n        label: 'Moldova, Republic of',\n        phone: '373',\n    },\n    { code: 'ME', label: 'Montenegro', phone: '382' },\n    {\n        code: 'MF',\n        label: 'Saint Martin (French part)',\n        phone: '590',\n    },\n    { code: 'MG', label: 'Madagascar', phone: '261' },\n    { code: 'MH', label: 'Marshall Islands', phone: '692' },\n    {\n        code: 'MK',\n        label: 'Macedonia, the Former Yugoslav Republic of',\n        phone: '389',\n    },\n    { code: 'ML', label: 'Mali', phone: '223' },\n    { code: 'MM', label: 'Myanmar', phone: '95' },\n    { code: 'MN', label: 'Mongolia', phone: '976' },\n    { code: 'MO', label: 'Macao', phone: '853' },\n    {\n        code: 'MP',\n        label: 'Northern Mariana Islands',\n        phone: '1-670',\n    },\n    { code: 'MQ', label: 'Martinique', phone: '596' },\n    { code: 'MR', label: 'Mauritania', phone: '222' },\n    { code: 'MS', label: 'Montserrat', phone: '1-664' },\n    { code: 'MT', label: 'Malta', phone: '356' },\n    { code: 'MU', label: 'Mauritius', phone: '230' },\n    { code: 'MV', label: 'Maldives', phone: '960' },\n    { code: 'MW', label: 'Malawi', phone: '265' },\n    { code: 'MX', label: 'Mexico', phone: '52' },\n    { code: 'MY', label: 'Malaysia', phone: '60' },\n    { code: 'MZ', label: 'Mozambique', phone: '258' },\n    { code: 'NA', label: 'Namibia', phone: '264' },\n    { code: 'NC', label: 'New Caledonia', phone: '687' },\n    { code: 'NE', label: 'Niger', phone: '227' },\n    { code: 'NF', label: 'Norfolk Island', phone: '672' },\n    { code: 'NG', label: 'Nigeria', phone: '234' },\n    { code: 'NI', label: 'Nicaragua', phone: '505' },\n    { code: 'NL', label: 'Netherlands', phone: '31' },\n    { code: 'NO', label: 'Norway', phone: '47' },\n    { code: 'NP', label: 'Nepal', phone: '977' },\n    { code: 'NR', label: 'Nauru', phone: '674' },\n    { code: 'NU', label: 'Niue', phone: '683' },\n    { code: 'NZ', label: 'New Zealand', phone: '64' },\n    { code: 'OM', label: 'Oman', phone: '968' },\n    { code: 'PA', label: 'Panama', phone: '507' },\n    { code: 'PE', label: 'Peru', phone: '51' },\n    { code: 'PF', label: 'French Polynesia', phone: '689' },\n    { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n    { code: 'PH', label: 'Philippines', phone: '63' },\n    { code: 'PK', label: 'Pakistan', phone: '92' },\n    { code: 'PL', label: 'Poland', phone: '48' },\n    {\n        code: 'PM',\n        label: 'Saint Pierre and Miquelon',\n        phone: '508',\n    },\n    { code: 'PN', label: 'Pitcairn', phone: '870' },\n    { code: 'PR', label: 'Puerto Rico', phone: '1' },\n    {\n        code: 'PS',\n        label: 'Palestine, State of',\n        phone: '970',\n    },\n    { code: 'PT', label: 'Portugal', phone: '351' },\n    { code: 'PW', label: 'Palau', phone: '680' },\n    { code: 'PY', label: 'Paraguay', phone: '595' },\n    { code: 'QA', label: 'Qatar', phone: '974' },\n    { code: 'RE', label: 'Reunion', phone: '262' },\n    { code: 'RO', label: 'Romania', phone: '40' },\n    { code: 'RS', label: 'Serbia', phone: '381' },\n    { code: 'RU', label: 'Russian Federation', phone: '7' },\n    { code: 'RW', label: 'Rwanda', phone: '250' },\n    { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n    { code: 'SB', label: 'Solomon Islands', phone: '677' },\n    { code: 'SC', label: 'Seychelles', phone: '248' },\n    { code: 'SD', label: 'Sudan', phone: '249' },\n    { code: 'SE', label: 'Sweden', phone: '46' },\n    { code: 'SG', label: 'Singapore', phone: '65' },\n    { code: 'SH', label: 'Saint Helena', phone: '290' },\n    { code: 'SI', label: 'Slovenia', phone: '386' },\n    {\n        code: 'SJ',\n        label: 'Svalbard and Jan Mayen',\n        phone: '47',\n    },\n    { code: 'SK', label: 'Slovakia', phone: '421' },\n    { code: 'SL', label: 'Sierra Leone', phone: '232' },\n    { code: 'SM', label: 'San Marino', phone: '378' },\n    { code: 'SN', label: 'Senegal', phone: '221' },\n    { code: 'SO', label: 'Somalia', phone: '252' },\n    { code: 'SR', label: 'Suriname', phone: '597' },\n    { code: 'SS', label: 'South Sudan', phone: '211' },\n    {\n        code: 'ST',\n        label: 'Sao Tome and Principe',\n        phone: '239',\n    },\n    { code: 'SV', label: 'El Salvador', phone: '503' },\n    {\n        code: 'SX',\n        label: 'Sint Maarten (Dutch part)',\n        phone: '1-721',\n    },\n    {\n        code: 'SY',\n        label: 'Syrian Arab Republic',\n        phone: '963',\n    },\n    { code: 'SZ', label: 'Swaziland', phone: '268' },\n    {\n        code: 'TC',\n        label: 'Turks and Caicos Islands',\n        phone: '1-649',\n    },\n    { code: 'TD', label: 'Chad', phone: '235' },\n    {\n        code: 'TF',\n        label: 'French Southern Territories',\n        phone: '262',\n    },\n    { code: 'TG', label: 'Togo', phone: '228' },\n    { code: 'TH', label: 'Thailand', phone: '66' },\n    { code: 'TJ', label: 'Tajikistan', phone: '992' },\n    { code: 'TK', label: 'Tokelau', phone: '690' },\n    { code: 'TL', label: 'Timor-Leste', phone: '670' },\n    { code: 'TM', label: 'Turkmenistan', phone: '993' },\n    { code: 'TN', label: 'Tunisia', phone: '216' },\n    { code: 'TO', label: 'Tonga', phone: '676' },\n    { code: 'TR', label: 'Turkey', phone: '90' },\n    {\n        code: 'TT',\n        label: 'Trinidad and Tobago',\n        phone: '1-868',\n    },\n    { code: 'TV', label: 'Tuvalu', phone: '688' },\n    {\n        code: 'TW',\n        label: 'Taiwan, Province of China',\n        phone: '886',\n    },\n    {\n        code: 'TZ',\n        label: 'United Republic of Tanzania',\n        phone: '255',\n    },\n    { code: 'UA', label: 'Ukraine', phone: '380' },\n    { code: 'UG', label: 'Uganda', phone: '256' },\n    {\n        code: 'US',\n        label: 'United States',\n        phone: '1',\n        suggested: true,\n    },\n    { code: 'UY', label: 'Uruguay', phone: '598' },\n    { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n    {\n        code: 'VA',\n        label: 'Holy See (Vatican City State)',\n        phone: '379',\n    },\n    {\n        code: 'VC',\n        label: 'Saint Vincent and the Grenadines',\n        phone: '1-784',\n    },\n    { code: 'VE', label: 'Venezuela', phone: '58' },\n    {\n        code: 'VG',\n        label: 'British Virgin Islands',\n        phone: '1-284',\n    },\n    {\n        code: 'VI',\n        label: 'US Virgin Islands',\n        phone: '1-340',\n    },\n    { code: 'VN', label: 'Vietnam', phone: '84' },\n    { code: 'VU', label: 'Vanuatu', phone: '678' },\n    { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n    { code: 'WS', label: 'Samoa', phone: '685' },\n    { code: 'XK', label: 'Kosovo', phone: '383' },\n    { code: 'YE', label: 'Yemen', phone: '967' },\n    { code: 'YT', label: 'Mayotte', phone: '262' },\n    { code: 'ZA', label: 'South Africa', phone: '27' },\n    { code: 'ZM', label: 'Zambia', phone: '260' },\n    { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];","import React, { useContext, useEffect } from 'react'\nimport { Box, Typography, Checkbox, FormControlLabel, Autocomplete, TextField, LinearProgress, Button, Paper } from \"@mui/material\"\nimport { useFormik } from \"formik\"\nimport * as yup from \"yup\"\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nimport { countries } from \"../../../../../shared/countries/countries\"\nimport { DepositContext } from '../../../../../../store/context/deposit';\nimport axios from 'axios'\nimport useSwr from 'swr'\nimport { HOST_URL } from \"../../../../../../config/settings\"\nconst validationSchema = yup.object({\n    postal_code: yup\n        .string()\n        .when('default', {\n            is: false,\n            then: yup.string().required(\"Postal Code Is Required\")\n        }),\n    state_province_region: yup\n        .string().when('default', {\n            is: false,\n            then: yup.string().required(\"State Pronvice Is Required\")\n        }),\n    city_town_village: yup\n        .string()\n        .when('default', {\n            is: false,\n            then: yup.string().required(\"City/Town?Village Is Required\")\n        }),\n    address_line_2: yup\n        .string(),\n    address_line_1: yup\n        .string()\n        .when('default', {\n            is: false,\n            then: yup.string().required(\"Address Line 1 Is Required\")\n        }),\n    default: yup\n        .bool()\n        .required(\"To create account you must agree to terms and conditions\"),\n    first_name: yup\n        .string()\n        .when('default', {\n            is: false,\n            then: yup.string().required(\"First Name Is Required\")\n        }),\n    last_name: yup\n        .string()\n        .when('default', {\n            is: false,\n            then: yup.string().required(\"Last Name Is Required\")\n        }),\n    amount: yup.number().required(\"Amount is required\")\n});\nconst token = localStorage.getItem('token')\nconst config = {\n    headers: { Authorization: `Bearer ${token}` }\n};\nconst fetcher = (url: string) => axios.get(url, config).then(res => res.data)\n\nexport default function DepositDetails() {\n    const { data, error } = useSwr(`${HOST_URL}wallet_get`, fetcher)\n    const { deposit, makeDeposit } = useContext(DepositContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            postal_code: '',\n            state_province_region: \"\",\n            city_town_village: \"\",\n            address_line_2: \"\",\n            address_line_1: \"\",\n            default: false,\n            first_name: \"\",\n            last_name: \"\",\n            amount: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            makeDeposit(\n                parseInt(deposit.cardNo.replaceAll(\"-\", \"\")),\n                parseInt(deposit.expiry.split(\"/\")[0]),\n                2000 + parseInt(deposit.expiry.split(\"/\")[1]),\n                values.amount,\n                deposit.ccv,\n                values.first_name,\n                values.last_name,\n                values.address_line_2,\n                values.address_line_1,\n                values.postal_code,\n                values.city_town_village,\n                values.state_province_region,\n                inputValue,\n                localStorage.getItem('email')\n            )\n        },\n    });\n    const [value, setValue] = React.useState();\n    const [inputValue, setInputValue] = React.useState();\n\n    useEffect(() => {\n        if (deposit.success !== null && deposit.success !== \"null\") {\n            enqueueSnackbar(deposit.success, {\n                variant: 'success',\n            })\n            if (deposit.success !== \"Card entered successfully\") history.go(0)\n        }\n        if (deposit.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(deposit.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(deposit.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [deposit])\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"amount\"\n                            label=\"Amount\"\n                            name=\"amount\"\n                            type=\"text\"\n                            value={formik.values.amount}\n                            onChange={formik.handleChange}\n                            error={formik.touched.amount && Boolean(formik.errors.amount)}\n                            helperText={formik.touched.amount && formik.errors.amount}\n                        />\n                        <FormControlLabel hidden control={<Checkbox disabled color=\"primary\"\n                            id=\"default\"\n                            name=\"default\"\n                            value={formik.values.default}\n                            onChange={formik.handleChange} />} label=\" Use Default Address Information\" />\n\n                        {!formik.values.default && (\n                            <>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"first_name\"\n                                    label=\"First Name\"\n                                    name=\"first_name\"\n                                    type=\"text\"\n                                    value={formik.values.first_name}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n                                    helperText={formik.touched.first_name && formik.errors.first_name}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"last_name\"\n                                    label=\"Last Name\"\n                                    name=\"last_name\"\n                                    type=\"text\"\n                                    value={formik.values.last_name}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n                                    helperText={formik.touched.last_name && formik.errors.last_name}\n                                />\n                                <Autocomplete\n                                    id=\"nationality\"\n                                    options={countries}\n                                    autoHighlight\n                                    getOptionLabel={(option) => option.label}\n                                    value={value}\n                                    onChange={(event: any, newValue: any) => {\n                                        setValue(newValue);\n                                    }}\n                                    inputValue={inputValue}\n                                    onInputChange={(event: any, newInputValue: any) => {\n                                        setInputValue(newInputValue);\n                                    }}\n                                    renderOption={(props, option) => (\n                                        <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n                                            <img\n                                                loading=\"lazy\"\n                                                width=\"20\"\n                                                src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                                                srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                                                alt=\"\"\n                                            />\n                                            {option.label}\n                                        </Box>\n                                    )}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Nationality\"\n                                            fullWidth\n                                            required\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            name=\"nationality\"\n                                            inputProps={{\n                                                ...params.inputProps,\n                                                autoComplete: 'new-password', // disable autocomplete and autofill\n                                            }}\n                                        />\n                                    )}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"address_line_1\"\n                                    label=\"Address Line 1\"\n                                    name=\"address_line_1\"\n                                    type=\"text\"\n                                    value={formik.values.address_line_1}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.address_line_1 && Boolean(formik.errors.address_line_1)}\n                                    helperText={formik.touched.address_line_1 && formik.errors.address_line_1}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    fullWidth\n                                    name=\"address_line_2\"\n                                    label=\"Address Line 2\"\n                                    type=\"text\"\n                                    id=\"address_line_2\"\n                                    value={formik.values.address_line_2}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.address_line_2 && Boolean(formik.errors.address_line_2)}\n                                    helperText={formik.touched.address_line_2 && formik.errors.address_line_2}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"city_town_village\"\n                                    label=\"Locality\"\n                                    type=\"text\"\n                                    id=\"city_town_village\"\n                                    value={formik.values.city_town_village}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.city_town_village && Boolean(formik.errors.city_town_village)}\n                                    helperText={formik.touched.city_town_village && formik.errors.city_town_village}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"state_province_region\"\n                                    label=\"Administrative Area\"\n                                    type=\"text\"\n                                    id=\"state_province_region\"\n                                    value={formik.values.state_province_region}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.state_province_region && Boolean(formik.errors.state_province_region)}\n                                    helperText={formik.touched.state_province_region && formik.errors.state_province_region}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"postal_code\"\n                                    label=\"Postal Code\"\n                                    type=\"text\"\n                                    id=\"postal_code\"\n                                    value={formik.values.postal_code}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.postal_code && Boolean(formik.errors.postal_code)}\n                                    helperText={formik.touched.postal_code && formik.errors.postal_code}\n                                />\n                            </>)}\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            fullWidth\n                            sx={{\n                                color: \"white\",\n                                marginX: \"auto\",\n                                marginTop: 10\n                            }}\n                            disabled={deposit.loading}\n                        >\n                            Next\n                        </Button>\n                        {deposit.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n","import React from 'react'\nimport { List, ListItem, Typography, Divider, ListItemText, Box } from \"@mui/material\"\nimport axios from 'axios'\nimport useSwr from 'swr'\nimport { HOST_URL } from \"../../../../../../config/settings\"\nconst token = localStorage.getItem('token')\nconst config = {\n    headers: { Authorization: `Bearer ${token}` },\n    withCredentials: true\n};\nconst fetcher = (url: string) => axios.get(url, config).then(res => res.data)\nexport default function BeneficiaryList() {\n    const { data } = useSwr(`${HOST_URL}beneficiaries/list`, fetcher)\n    return (\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {data &&data.beneficiaries.map((beneficiary: any) => {\n                return (\n                    <Box key={beneficiary.id}>\n                        <ListItem alignItems=\"flex-start\">\n                            <ListItemText\n                                primary={beneficiary.first_name + \" \" + beneficiary.last_name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            sx={{ display: 'inline' }}\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            color=\"text.primary\"\n                                        >\n                                            {beneficiary.phone_number}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"fullWidth\" component=\"li\" />\n                    </Box>\n                )\n            })}\n        </List>\n    )\n}\n","import React from 'react'\nimport { List, ListItem, Typography, Divider, ListItemText, Box, Avatar, ListItemAvatar } from \"@mui/material\"\nimport axios from 'axios'\nimport useSwr from 'swr'\nimport { HOST_URL } from \"../../../../../../config/settings\"\nconst token = localStorage.getItem('token')\nconst config = {\n    headers: { Authorization: `Bearer ${token}` },\n    withCredentials: true\n};\nconst fetcher = (url: string) => axios.get(url, config).then(res => res.data)\nexport default function Transactions() {\n    const { data, error } = useSwr(`${HOST_URL}transactions/logs/me`, fetcher)\n    return (\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n            {data && data.my_transactions.map((transaction: any) => {\n                return (\n                <Box key={transaction.id}>\n                    <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                            <Avatar sx={{ background: '#3C9905' }}>{transaction.status}</Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={transaction.amount +\"$\"}\n                            secondary={\n                                <React.Fragment>\n                                    <Typography\n                                        sx={{ display: 'inline' }}\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        color=\"text.primary\"\n                                    >\n                                        Charge 2$\n                                    </Typography>\n                                    {` — ${transaction.type}`}\n                                </React.Fragment>\n                            }\n                        />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                </Box>)\n            })}\n        </List>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Grid, Paper, Modal, Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText, Fab, IconButton } from \"@mui/material\"\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Box } from '@mui/system';\nimport SelectMethod from './components/send/selectMethod';\nimport CreditCard from './components/deposit/CreditCard';\nimport AddIcon from '@mui/icons-material/Add';\nimport Beneficiary from './components/beneficiary/beneficiary_create'\nimport { DepositContext } from '../../../../store/context/deposit'\nimport DepositDetails from './components/deposit/DepositDetails';\nimport axios from 'axios'\nimport useSwr from 'swr'\nimport { HOST_URL } from \"../../../../config/settings\"\nimport BeneficiaryList from './components/beneficiary/beneficiary_list';\nimport Transactions from './components/transactions/transactions';\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n    maxHeight: \"80vh\",\n    overflow: \"auto\"\n};\nconst token = localStorage.getItem('token')\nconst config = {\n    headers: { Authorization: `Bearer ${token}` },\n    withCredentials: true\n};\nconst fetcher = (url: string) => axios.get(url, config).then(res => res.data)\n\nexport default function Dashboard() {\n    const { data } = useSwr(`${HOST_URL}wallet/me/balance`, fetcher)\n    const { data: wallet_data } = useSwr(`${HOST_URL}wallet_get/`, fetcher);\n    const { deposit } = useContext(DepositContext)\n    const [openDeposit, setOpenDeposit] = React.useState(false);\n    const handleDepositOpen = () => setOpenDeposit(true);\n    const handleDepositClose = () => setOpenDeposit(false);\n    const [openSend, setSendOpen] = React.useState(false);\n    const handleSendOpen = () => setSendOpen(true);\n    const handleSendClose = () => setSendOpen(false);\n    const [openBeneficiary, setBeneficiaryOpen] = React.useState(false);\n    const handleBeneficiaryOpen = () => setBeneficiaryOpen(true);\n    const handleBeneficiaryClose = () => setBeneficiaryOpen(false);\n    return (\n        <>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6} >\n                    <Card >\n                        {/* <CardMedia\n                            component=\"img\"\n                            alt=\"profile picture\"\n                            height=\"140\"\n                            image=\"/images/default.png\"\n                        /> */}\n                        <CardContent>\n                            {data && (<Typography gutterBottom variant=\"h5\" component=\"div\">\n                                {data.balance} $\n                            </Typography>)}\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                {wallet_data && wallet_data.data[0].first_name + \" \" + wallet_data.data[0].last_name}\n                            </Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Button variant=\"contained\" size=\"small\" onClick={handleDepositOpen}>Deposit</Button>\n\n                            <Box sx={{ flexGrow: 1 }}></Box>\n                            <Button size=\"small\" variant=\"outlined\" onClick={handleSendOpen}>Send</Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper sx={{\n                        // minHeight: \"40vh\",\n                        padding: 3,\n                        position: 'relative'\n                    }}>\n                        <Typography variant=\"h5\" >Beneficiaries</Typography>\n                        <BeneficiaryList />\n                        <Fab color=\"primary\" aria-label=\"add\" sx={{\n                            position: 'absolute',\n                            bottom: 5,\n                            right: 5\n                        }}\n                            onClick={handleBeneficiaryOpen}\n                        >\n                            <AddIcon />\n                        </Fab>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} >\n                    <Paper sx={{ minHeight: \"40vh\", padding: 3 }}>\n                        <Typography variant=\"h5\">Recent Transactions</Typography>\n                        <Transactions />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Modal\n                open={openDeposit}\n                onClose={handleDepositClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    {deposit.step === 1 ?\n                        <DepositDetails/>\n                        : <CreditCard />}\n\n\n                </Box>\n            </Modal>\n\n            <Modal\n                open={openSend}\n                onClose={handleSendClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <SelectMethod />\n                </Box>\n            </Modal>\n            <Modal\n                open={openBeneficiary}\n                onClose={handleBeneficiaryClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Beneficiary />\n                </Box>\n            </Modal>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Statistics() {\n    return (\n        <div>\n            statistics\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Transactions() {\n    console.log(\"Called\")\n    return (\n        <div>\n            transactions\n        </div>\n    )\n}\n","import React from 'react';\nimport Link from '@mui/material/Link'\nimport Typography from '@mui/material/Typography'\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"#\">\n            Enviar Dinheiro\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default Copyright","import React from 'react'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport { Box } from \"@mui/material\"\nimport { SideBar, Dashboard, Statistics, Transactions, Settings } from \"./components\"\nimport { styled } from '@mui/material/styles'\nimport { Copyright } from '../shared'\nimport DepositContextProvider from \"../../store/context/deposit\"\nimport SendContextProvider from \"../../store/context/send\"\nimport BeneficiaryContextProvider from \"../../store/context/beneficiary\"\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\nfunction Main() {\n    let { path } = useRouteMatch()\n    return (\n        <>\n            <Box sx={{ display: 'flex' }}>\n                <SideBar />\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n                    <DrawerHeader />\n                    <Switch>\n                        <DepositContextProvider>\n                            <SendContextProvider>\n                                <BeneficiaryContextProvider>\n                                    <Route exact path={`${path}`} component={Dashboard} />\n                                    <Route exact path={`${path}/statistics`} component={Statistics} />\n                                    <Route exact path={`${path}/transactions`} component={Transactions} />\n                                    <Route exact path={`${path}/settings`} component={Settings} />\n                                </BeneficiaryContextProvider>\n                            </SendContextProvider>\n                        </DepositContextProvider>\n                    </Switch>\n                </Box>\n                <Copyright />\n            </Box>\n        </>\n    );\n}\n\nexport default Main","import React, { useContext, useEffect } from 'react'\nimport { Grid, LinearProgress, Avatar, Typography, Button, Box, Link, Paper, TextField } from '@mui/material'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { AuthContext } from '../../../../../store/context/auth'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nconst validationSchema = yup.object({\n    email: yup\n        .string()\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string()\n        .required('Password is required'),\n});\nconst Login: React.FC = (): JSX.Element => {\n    const { auth, login } = useContext(AuthContext);\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            login(values.email, values.password)\n        },\n    });\n    useEffect(() => {\n        if (auth.token !== 'null' && auth.token !== null) {\n            enqueueSnackbar(\"Logged In Successfully\", {\n                variant: 'success',\n            })\n            history.push(\"/console\");\n        }\n        if (auth.error) {\n            enqueueSnackbar(auth.error, {\n                variant: 'error',\n            })\n        }\n    }, [auth])\n    return (\n        <Box sx={{ height: \"85vh\" }}>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginTop: \"10%\",\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign In\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={auth.loading}\n                        >\n                            Sign In\n                        </Button>\n                        {auth.loading && (\n                            <LinearProgress />\n                        )}\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {/* Forgot password */}\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"/register\" variant=\"body2\">\n                                    Don't have an account? Sign Up\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Login;","// authentication actions\nexport const REGISTER_START = 'REGISTER_START';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const PHONE_PENDING = \"PHONE_PENDING\";\nexport const PHONE_CONFIRMED=\"PHONE_CONFIRMED\";\nexport const WALLET_CREATED=\"WALLET_CREATED\";","import { updateObject } from '../utility'\nimport * as actionTypes from '../actionTypes/register'\nimport { IRegister, IRegisterAction } from '../models/register'\n\nexport const initialState: IRegister = {\n    step: 0,\n    phone: null,\n    error: null,\n    success: null,\n    loading: false,\n    phone_confirmed: false,\n    token: null,\n    wallet_created: false\n}\n\nconst registerStart = (state: IRegister, action: IRegisterAction) => {\n    return updateObject(state, {\n        loading: true,\n    })\n}\n\nconst signUpSuccess = (state: IRegister, action: IRegisterAction) => {\n    return updateObject(state, {\n        error: null,\n        success: action.success,\n        loading: false,\n        token: action.token,\n        step: 2\n    })\n}\n\nconst registerFail = (state: IRegister, action: IRegisterAction) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: null\n    })\n}\nconst phonePending = (state: IRegister, action: IRegisterAction): IRegister => {\n    return updateObject(\n        state, {\n        loading: false,\n        success: action.success,\n        phone: action.phone,\n        error: null\n    })\n}\nconst phoneConfirmed = (state: IRegister, action: IRegisterAction): IRegister => {\n    return updateObject(\n        state, {\n        loading: false,\n        success: action.success,\n        step: 1,\n        phone_confirmed: true,\n        error: null\n    })\n}\nconst walletCreated = (state: IRegister, action: IRegisterAction): IRegister => {\n    return updateObject(\n        state, {\n        loading: false,\n        success: action.success,\n        wallet_created: true,\n        error: null\n    })\n}\nconst reducer = (state: IRegister, action: IRegisterAction): IRegister => {\n    switch (action.type) {\n        case actionTypes.REGISTER_START:\n            return registerStart(state, action);\n        case actionTypes.PHONE_PENDING:\n            return phonePending(state, action)\n        case actionTypes.REGISTER_FAIL:\n            return registerFail(state, action)\n        case actionTypes.PHONE_CONFIRMED:\n            return phoneConfirmed(state, action)\n        case actionTypes.REGISTER_SUCCESS:\n            return signUpSuccess(state, action);\n        case actionTypes.WALLET_CREATED:\n            return walletCreated(state, action);\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { useReducer, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/register'\nimport axios from 'axios'\nimport * as actionTypes from '../actionTypes/register'\nimport { IRegister, IRegisterAction } from '../models/register'\nimport { REGISTER_URL, HOST_URL } from '../../config/settings'\n\nexport const RegisterContext = createContext<IRegister | any>(initialState);\n\nconst RegisterContextProvider = (props: any): JSX.Element => {\n\n    const [register, registerDispatch] = useReducer(reducer, initialState)\n\n    const registerStart = (): IRegisterAction => {\n        return {\n            type: actionTypes.REGISTER_START,\n            error: null,\n            step: 0,\n            success: null,\n            phone: null,\n            phone_confirmed: null,\n            token: null,\n            wallet_created: null\n        }\n    }\n\n    const registerSuccess = (success: string, token: string): IRegisterAction => {\n        return {\n            type: actionTypes.REGISTER_SUCCESS,\n            step: null,\n            error: null,\n            success,\n            phone: null,\n            phone_confirmed: null,\n            token,\n            wallet_created: null\n        }\n    }\n\n    const registerFail = (error: string): IRegisterAction => {\n        return {\n            type: actionTypes.REGISTER_FAIL,\n            step: null,\n            error,\n            success: null,\n            phone: null,\n            phone_confirmed: null,\n            token: null,\n            wallet_created: null\n        }\n    }\n    const phonePending = (success: string, phone: string): IRegisterAction => {\n        return {\n            type: actionTypes.PHONE_PENDING,\n            step: null,\n            error: null,\n            success,\n            phone,\n            phone_confirmed: null,\n            token: null,\n            wallet_created: null\n        }\n    }\n    const phoneConfirmed = (success: string): IRegisterAction => {\n        return {\n            type: actionTypes.PHONE_CONFIRMED,\n            step: null,\n            error: null,\n            success,\n            phone: null,\n            phone_confirmed: true,\n            token: null,\n            wallet_created: null\n        }\n    }\n    const walletCreated = (success: string): IRegisterAction => {\n        return {\n            type: actionTypes.WALLET_CREATED,\n            step: null,\n            error: null,\n            success,\n            phone: null,\n            phone_confirmed: true,\n            token: null,\n            wallet_created: null\n        }\n    }\n    const phoneValidate = (phone: string) => {\n        registerDispatch(registerStart())\n        axios.defaults.withCredentials = true\n        axios.post(`${HOST_URL}phone`,\n            {\n                phone_number: phone,\n            },\n            {\n                xsrfHeaderName: \"X-XSRF-TOKEN\", // change the name of the header to \"X-XSRF-TOKEN\" and it should works\n                withCredentials: true\n            }\n        ).then(res => {\n            if (res.status === 200) {\n                registerDispatch(phonePending(\"Confirmation Code Sent Via SMS\", phone))\n                localStorage.setItem('phone', phone)\n            }\n        }).catch(err => {\n            if (err.response.data.errors) {\n                registerDispatch(registerFail(JSON.stringify(err.response.data.errors)))\n            } else {\n                registerDispatch(registerFail(\"Something Went wrong\"))\n            }\n        })\n    }\n    const phoneConfirmationCode = (code: number, phone_number: string) => {\n        registerDispatch(registerStart())\n        axios.defaults.withCredentials = true\n        axios.post(`${HOST_URL}verify_phone`, {\n            code,\n            phone_number\n        }, {\n            xsrfHeaderName: \"X-XSRF-TOKEN\", // change the name of the header to \"X-XSRF-TOKEN\" and it should works\n            withCredentials: true\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    registerDispatch(phoneConfirmed(\"Phone Confirmation Successfull\"))\n                }\n            })\n            .catch(err => {\n                if (err.response.data.errors) {\n                    registerDispatch(registerFail(JSON.stringify(err.response.data.errors)))\n                } else {\n                    registerDispatch(registerFail(\"Phone Confirmation Failed\"))\n                }\n            })\n    }\n    const signup = (email: string, first_name: string, last_name: string, password: string, password_confirmation: string, phone_number: string) => {\n        registerDispatch(registerStart())\n        let phone_number1 = localStorage.getItem('phone')\n        // axios.defaults.withCredentials = true\n        axios.post(`${REGISTER_URL}`, {\n            first_name,\n            last_name,\n            email,\n            phone_number: phone_number1,\n            password,\n            password_confirmation\n        },\n            // {\n            //     xsrfHeaderName: \"X-XSRF-TOKEN\", // change the name of the header to \"X-XSRF-TOKEN\" and it should works\n            //     withCredentials: true\n            // }\n        ).then(res => {\n            localStorage.setItem(\"token\", res.data.token)\n            localStorage.setItem('email', email)\n            registerDispatch(registerSuccess(\"Account Created Successfully\", res.data.token))\n        }).catch(err => {\n            if (err.response.data.errors) {\n                registerDispatch(registerFail(JSON.stringify(err.response.data.errors)))\n            } else {\n                if (err.response.data.errors) {\n                    registerDispatch(registerFail(JSON.stringify(err.response.data.errors)))\n                } else {\n                    registerDispatch(registerFail(\"Something Went wrong\"))\n                }\n            }\n        })\n    }\n    const create_wallet = (nationality: string, address_line_1: string, address_line_2: string, city_town_village: string, state_pronvince_region: string, postal_code: number) => {\n        registerDispatch(registerStart())\n        // axios.defaults.withCredentials = true\n        const token = localStorage.getItem('token')\n        if (token) {\n            const config = {\n                headers: { Authorization: `Bearer ${token}` }\n            };\n            axios.post(`${HOST_URL}wallet_create`, {\n                nationality,\n                date_of_birth: \"1998-02-25\",\n                address_line_1,\n                address_line_2,\n                city_town_village,\n                state_pronvince_region,\n                postal_code\n            }, config)\n                .then(res => {\n                    registerDispatch(walletCreated(\"Wallet Created Successfully\"))\n                })\n                .catch(err => {\n                    registerDispatch(registerFail(\"Something Went wrong\"))\n                })\n        } else {\n            registerDispatch(registerFail(\"You Needed to be Authenticated\"))\n        }\n    }\n    return (\n        <RegisterContext.Provider value={{ register, phoneValidate, signup, create_wallet, phoneConfirmationCode }}>\n            {props.children}\n        </RegisterContext.Provider>\n    )\n}\n\nexport default RegisterContextProvider","import React, { useContext, useEffect } from 'react'\nimport { RegisterContext } from '../../../../../../store/context/register'\nimport { useFormik } from 'formik';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport * as yup from 'yup';\nimport { Box, Avatar, Typography, Button, LinearProgress, Paper, TextField } from '@mui/material/';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nconst validationSchema = yup.object({\n    email: yup\n        .string()\n        .email('Enter a valid email')\n        .required('Email is required'),\n    first_name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required(\"Last Name Is Required\"),\n    last_name: yup\n        .string()\n        .min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n        .required(\"Last Name Is Required\"),\n    password: yup\n        .string()\n        .matches(\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        )\n        .required('Password is required'),\n    confirm_password: yup\n        .string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm Password is required'),\n});\nexport default function Signup() {\n    const { register, signup } = useContext(RegisterContext)\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            confirm_password: \"\",\n            last_name: \"\",\n            first_name: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            signup(values.email, values.first_name, values.last_name, values.password, values.confirm_password, register.phone_number)\n        },\n    });\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    useEffect(() => {\n        if (register.token) {\n            enqueueSnackbar(register.success, {\n                variant: 'success',\n            })\n            history.push(\"/register/wallet_create\");\n        }\n        if (register.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(register.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(register.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [register])\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    // className={classes.paper}\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign Up\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"first_name\"\n                            label=\"First Name\"\n                            name=\"first_name\"\n                            type=\"text\"\n                            value={formik.values.first_name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n                            helperText={formik.touched.first_name && formik.errors.first_name}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"last_name\"\n                            label=\"Last Name\"\n                            name=\"last_name\"\n                            type=\"text\"\n                            value={formik.values.last_name}\n                            onChange={formik.handleChange}\n                            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n                            helperText={formik.touched.last_name && formik.errors.last_name}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"confirm_password\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            id=\"confirm_password\"\n                            value={formik.values.confirm_password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.confirm_password && Boolean(formik.errors.confirm_password)}\n                            helperText={formik.touched.confirm_password && formik.errors.confirm_password}\n                        />\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={register.loading}\n                        >\n                            Next\n                        </Button>\n                        {register.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\n\n","\nimport React, { useContext, useEffect } from 'react'\nimport { LinearProgress, Avatar, Typography, Button, Box, Paper, TextField } from '@mui/material'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { RegisterContext } from '../../../../../../store/context/register'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\";\nimport \"yup-phone\";\nconst validationSchema = yup.object({\n    phone: yup\n        .string()\n        .phone()\n        .required('Phone is required'),\n\n});\nconst Login: React.FC = (): JSX.Element => {\n    const { register, phoneValidate } = useContext(RegisterContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            phone: \"\",\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            phoneValidate(values.phone)\n        },\n    });\n    useEffect(() => {\n        if (register.phone) {\n            enqueueSnackbar(register.success, {\n                variant: 'success',\n            })\n            history.push(\"/register/phone_confirm\");\n        }\n        if (register.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(register.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(register.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [register])\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography variant=\"h5\">\n                        Sign up for Enviar Dinheiro\n                    </Typography>\n                    <Typography>\n                        First, add your mobile number\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"phone\"\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"eg... +18884521505\"\n                            type=\"text\"\n                            value={formik.values.phone}\n                            onChange={formik.handleChange}\n                            error={formik.touched.phone && Boolean(formik.errors.phone)}\n                            helperText={formik.touched.phone && formik.errors.phone}\n                        />\n                        <Typography>\n                            By continuing, you confirm that you’re the owner or primary user of this mobile phone number. You agree to receive automated texts to confirm your phone number. Message and data rates may apply.\n                        </Typography>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={register.loading}\n                        >\n                            Next\n                        </Button>\n                        {register.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n\nexport default Login;\n\n","import React, { useContext, useEffect } from 'react'\nimport { Box, Paper, Typography, TextField, Button, LinearProgress } from \"@mui/material\"\nimport { RegisterContext } from '../../../../../../store/context/register'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\n\nconst validationSchema = yup.object({\n    code: yup\n        .string()\n        .matches(/^[0-9]{6}$/, \"Code is invalid\")\n        .required('Verification Code is required'),\n});\nexport default function PhoneConfirm() {\n    const { register, phoneConfirmationCode } = useContext(RegisterContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            code: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            phoneConfirmationCode(values.code, register.phone)\n        },\n    });\n    useEffect(() => {\n        if (register.phone_confirmed) {\n            enqueueSnackbar(register.success, {\n                variant: 'success',\n            })\n            history.push(\"/register/signup\");\n        }\n        if (register.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(register.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(register.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [register])\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Typography variant=\"h5\">\n                        Confirm Phone Number\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"code\"\n                            label=\"Code\"\n                            name=\"code\"\n                            type=\"text\"\n                            onBlur={formik.handleBlur}\n                            value={formik.values.code}\n                            onChange={formik.handleChange}\n                            error={formik.touched.code && Boolean(formik.errors.code)}\n                            helperText={formik.touched.code && formik.errors.code}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={register.loading}\n                        >\n                            Next\n                        </Button>\n                        {register.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { RegisterContext } from '../../../../../../store/context/register'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Box, Avatar, Typography, Button, Checkbox, Paper, TextField, FormControlLabel, FormGroup, Autocomplete, LinearProgress } from '@mui/material/';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from \"react-router-dom\"\nimport { countries } from \"../../../../../shared/countries/countries\"\nconst validationSchema = yup.object({\n    postal_code: yup\n        .number()\n        .required(\"Postal Code is Required\"),\n    state_province_region: yup\n        .string()\n        .required(\"State Province Region is required\"),\n    city_town_village: yup\n        .string()\n        .required(\"City Town Village is required\"),\n    address_line_2: yup\n        .string(),\n    address_line_1: yup\n        .string()\n        .required(\"Address Line 1 is required\"),\n    terms: yup\n        .bool()\n        .oneOf([true], 'Field must be checked')\n        .required(\"To create account you must agree to terms and conditions\")\n});\nexport default function WalletCreate() {\n    const { register, create_wallet } = useContext(RegisterContext)\n    const { enqueueSnackbar } = useSnackbar();\n    const history = useHistory()\n    const formik = useFormik({\n        initialValues: {\n            postal_code: '',\n            state_province_region: \"\",\n            city_town_village: \"\",\n            address_line_2: \"\",\n            address_line_1: \"\",\n            terms: false,\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            create_wallet(inputValue, values.address_line_1, values.address_line_2, values.city_town_village, values.state_province_region, values.postal_code);\n        },\n    });\n    useEffect(() => {\n        if (register.wallet_created) {\n            enqueueSnackbar(register.success, {\n                variant: 'success',\n            })\n            window.location.reload()\n            history.push(\"/console\");\n        }\n        if (register.error) {\n            try {\n                var errors: any = Object.values(JSON.parse(register.error))\n                for (var i = 0; i < errors.length; i++) {\n                    enqueueSnackbar(errors[i][0], {\n                        variant: 'error',\n                    })\n                }\n            } catch (error) {\n                enqueueSnackbar(register.error, {\n                    variant: 'error',\n                })\n            }\n        }\n    }, [register])\n    const [value, setValue] = React.useState();\n    const [inputValue, setInputValue] = React.useState();\n    React.useEffect(() => {\n        console.log(\"value\", value);\n    }, [value]);\n    React.useEffect(() => {\n        console.log(\"inputValue\", inputValue);\n    }, [inputValue]);\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Avatar\n                        sx={{ background: \"#3C9905\" }}\n                    >\n                        <AccountBalanceWalletIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Create Wallet\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <Autocomplete\n                            id=\"nationality\"\n                            options={countries}\n                            autoHighlight\n                            getOptionLabel={(option) => option.label}\n                            value={value}\n                            onChange={(event: any, newValue: any) => {\n                                setValue(newValue);\n                            }}\n                            inputValue={inputValue}\n                            onInputChange={(event: any, newInputValue: any) => {\n                                setInputValue(newInputValue);\n                            }}\n                            renderOption={(props, option) => (\n                                <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n                                    <img\n                                        loading=\"lazy\"\n                                        width=\"20\"\n                                        src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n                                        srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n                                        alt=\"\"\n                                    />\n                                    {option.label}\n                                </Box>\n                            )}\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=\"Nationality\"\n                                    fullWidth\n                                    required\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    name=\"nationality\"\n                                    inputProps={{\n                                        ...params.inputProps,\n                                        autoComplete: 'new-password', // disable autocomplete and autofill\n                                    }}\n                                />\n                            )}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"address_line_1\"\n                            label=\"Address Line 1\"\n                            name=\"address_line_1\"\n                            type=\"text\"\n                            value={formik.values.address_line_1}\n                            onChange={formik.handleChange}\n                            error={formik.touched.address_line_1 && Boolean(formik.errors.address_line_1)}\n                            helperText={formik.touched.address_line_1 && formik.errors.address_line_1}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"address_line_2\"\n                            label=\"Address Line 2\"\n                            type=\"text\"\n                            id=\"address_line_2\"\n                            value={formik.values.address_line_2}\n                            onChange={formik.handleChange}\n                            error={formik.touched.address_line_2 && Boolean(formik.errors.address_line_2)}\n                            helperText={formik.touched.address_line_2 && formik.errors.address_line_2}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"city_town_village\"\n                            label=\"City / Town / Village\"\n                            type=\"text\"\n                            id=\"city_town_village\"\n                            value={formik.values.city_town_village}\n                            onChange={formik.handleChange}\n                            error={formik.touched.city_town_village && Boolean(formik.errors.city_town_village)}\n                            helperText={formik.touched.city_town_village && formik.errors.city_town_village}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"state_province_region\"\n                            label=\"State / Province / Region\"\n                            type=\"text\"\n                            id=\"state_province_region\"\n                            value={formik.values.state_province_region}\n                            onChange={formik.handleChange}\n                            error={formik.touched.state_province_region && Boolean(formik.errors.state_province_region)}\n                            helperText={formik.touched.state_province_region && formik.errors.state_province_region}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"postal_code\"\n                            label=\"Postal Code\"\n                            type=\"number\"\n                            id=\"postal_code\"\n                            value={formik.values.postal_code}\n                            onChange={formik.handleChange}\n                            error={formik.touched.postal_code && Boolean(formik.errors.postal_code)}\n                            helperText={formik.touched.postal_code && formik.errors.postal_code}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox\n                                    color=\"primary\"\n                                    id=\"terms\"\n                                    name=\"terms\"\n                                    value={formik.values.terms}\n                                    onChange={formik.handleChange}\n                                />}\n                                label=\"\n                                I confirm that I have read, consent and agree to Enviar Dinheiro's User Agreement and Privacy Statement, and I am of legal age.\"\n                            />\n                        </FormGroup>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            fullWidth\n                            sx={{\n                                color: \"white\",\n                                marginX: \"auto\"\n                            }}\n                            disabled={register.loading}\n                        >\n                            Create Account\n                        </Button>\n                        {register.loading && (\n                            <LinearProgress />\n                        )}\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}","import React, { useContext, useEffect } from 'react'\nimport { Box, Paper, Typography, TextField, Button, Grid } from \"@mui/material\"\nimport { AuthContext } from '../../../../../../store/context/auth'\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n    code: yup\n        .number()\n        .required('Verification Code is required'),\n});\nexport default function EmailConfirm() {\n    // const { auth, login } = useContext(AuthContext)\n    const formik = useFormik({\n        initialValues: {\n            code: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // login(values.email, values.password)\n            console.log(\"value\")\n        },\n    });\n    return (\n        <Box>\n            <Paper\n                sx={{\n                    padding: 5,\n                    maxWidth: '500px',\n                    marginX: \"auto\"\n                }}>\n                <Box\n                    sx={{\n                        display: \"flex\", flexDirection: 'column',\n                        alignItems: 'center',\n\n                    }}\n                >\n                    <Typography variant=\"h5\">\n                        Confirm Email\n                    </Typography>\n                    <form\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"code\"\n                            label=\"Code\"\n                            name=\"code\"\n                            type=\"number\"\n                            value={formik.values.code}\n                            onChange={formik.handleChange}\n                            error={formik.touched.code && Boolean(formik.errors.code)}\n                            helperText={formik.touched.code && formik.errors.code}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Next\n                        </Button>\n                    </form>\n                </Box>\n            </Paper>\n        </Box>\n    )\n}\n","import React, { useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Stack, Stepper, Step, StepLabel, AppBar, Toolbar, Typography, Button } from '@mui/material/';\nimport Check from '@mui/icons-material/Check';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport StepConnector, { stepConnectorClasses } from '@mui/material/StepConnector';\nimport { StepIconProps } from '@mui/material/StepIcon';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport SignUp from \"./components/signup\"\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\"\nimport Phone from './components/phone';\nimport PhoneConfirm from './components/phone_confirm';\nimport WalletCreate from './components/wallet_create';\nimport EmailConfirm from './components/email_confirm';\nimport { RegisterContext } from '../../../../../store/context/register';\nimport { useHistory } from 'react-router-dom';\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n        top: 10,\n        left: 'calc(-50% + 16px)',\n        right: 'calc(50% + 16px)',\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            borderColor: '#784af4',\n        },\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            borderColor: '#784af4',\n        },\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n        borderTopWidth: 3,\n        borderRadius: 1,\n    },\n}));\n\nconst QontoStepIconRoot = styled('div')<{ ownerState: { active?: boolean } }>(\n    ({ theme, ownerState }) => ({\n        color: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#eaeaf0',\n        display: 'flex',\n        height: 22,\n        alignItems: 'center',\n        ...(ownerState.active && {\n            color: '#784af4',\n        }),\n        '& .QontoStepIcon-completedIcon': {\n            color: '#784af4',\n            zIndex: 1,\n            fontSize: 18,\n        },\n        '& .QontoStepIcon-circle': {\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            backgroundColor: 'currentColor',\n        },\n    }),\n);\n\nfunction QontoStepIcon(props: StepIconProps) {\n    const { active, completed, className } = props;\n\n    return (\n        <QontoStepIconRoot ownerState={{ active }} className={className}>\n            {completed ? (\n                <Check className=\"QontoStepIcon-completedIcon\" />\n            ) : (\n                <div className=\"QontoStepIcon-circle\" />\n            )}\n        </QontoStepIconRoot>\n    );\n}\n\nconst ColorlibConnector = styled(StepConnector)(({ theme }) => ({\n    [`&.${stepConnectorClasses.alternativeLabel}`]: {\n        top: 22,\n    },\n    [`&.${stepConnectorClasses.active}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                'linear-gradient( 136deg, rgb(10, 25, 1) 0%, rgb(68, 173, 6) 50%, rgb(208, 253, 181) 100%)',\n        },\n    },\n    [`&.${stepConnectorClasses.completed}`]: {\n        [`& .${stepConnectorClasses.line}`]: {\n            backgroundImage:\n                'linear-gradient( 136deg, rgb(10, 25, 1) 0%, rgb(68, 173, 6) 50%, rgb(208, 253, 181) 100%)',\n        },\n    },\n    [`& .${stepConnectorClasses.line}`]: {\n        height: 3,\n        border: 0,\n        backgroundColor:\n            theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',\n        borderRadius: 1,\n    },\n}));\n\nconst ColorlibStepIconRoot = styled('div')<{\n    ownerState: { completed?: boolean; active?: boolean };\n}>(({ theme, ownerState }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(ownerState.active && {\n        backgroundImage:\n            'linear-gradient( 136deg, rgb(10, 25, 1) 0%, rgb(68, 173, 6) 50%, rgb(208, 253, 181) 100%)',\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    }),\n    ...(ownerState.completed && {\n        backgroundImage:\n            'linear-gradient( 136deg, rgb(10, 25, 1) 0%, rgb(68, 173, 6) 50%, rgb(208, 253, 181) 100%)',\n    }),\n}));\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n    const { active, completed, className } = props;\n\n    const icons: { [index: string]: React.ReactElement } = {\n        1: <PhoneAndroidIcon />,\n        2: <PersonAddIcon />,\n        3: <AccountBalanceWalletIcon />,\n    };\n\n    return (\n        <ColorlibStepIconRoot ownerState={{ completed, active }} className={className}>\n            {icons[String(props.icon)]}\n        </ColorlibStepIconRoot>\n    );\n}\n\nconst Header = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\nconst steps = ['Mobile Number', 'Create User', 'Create Wallet'];\nexport default function Register() {\n    let { path } = useRouteMatch()\n    const { register } = useContext(RegisterContext);\n    const history = useHistory()\n    return (\n        <Box sx={{ minHeight: \"95vh\" }}>\n            <AppBar position=\"static\" color=\"inherit\">\n                <Toolbar>\n                    <Box sx={{ flexGrow: 1 }}></Box>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        Enviar Dinheiro\n                    </Typography>\n                    <Button onClick={() => { history.push('/login') }}>Login</Button>\n                    <Box sx={{ flexGrow: 1 }}></Box>\n                </Toolbar>\n            </AppBar>\n\n            <Header />\n            <Box sx={{ minHeight: \"70vh\", paddingBottom: 10 }}>\n                <Switch>\n                    <Route exact path={`${path}`} component={Phone} />\n                    <Route path={`${path}/signup`} component={SignUp} />\n                    <Route path={`${path}/phone_confirm`} component={PhoneConfirm} />\n                    <Route path={`${path}/email_confirm`} component={EmailConfirm} />\n                    <Route path={`${path}/wallet_create`} component={WalletCreate} />\n                </Switch>\n            </Box>\n            <Stack sx={{ width: '100%' }} spacing={4}>\n                <Stepper alternativeLabel activeStep={register.step} connector={<ColorlibConnector />}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n            </Stack>\n        </Box >\n    );\n}\n","import { useContext, useState } from \"react\"\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { styled, makeStyles } from '@mui/material/styles';\nimport { CssBaseline } from \"@mui/material\";\n//import Paper from '@mui/material/Paper';\n//import Image from '/images/image3.png'; //stting  path to image\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea, Collapse } from '@mui/material';\nimport { ArrowLeft, ExpandMore } from '@mui/icons-material';\nimport { AccessAlarm, ThreeDRotation } from '@mui/icons-material';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { AuthContext } from \"../../../../store/context/auth\"\n//import Image from '../image/main.png';\n\nconst Header = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    //...theme.mixins.toolbar,\n}));\n\n// const styles = styled('div')((theme)) => ( {\n//     image:{\n//    width: \"70%\",\n//    height: \"300px\",\n//     }\n\n// });\n// const useStyles = makeStyles({\n//   root: `\n//   flexGrow: 1, \n//   fontSize: 40, \n//   fontStyle: 'normal', \n//   fontFamily: 'Monospace', \n//   fontWeight: 'Bold', \n//   justifyContent: 'center', \n//   alignItems: 'center', \n//   py: 10\n//   `,\n// });\n\nexport default function Home() {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n    const { auth } = useContext(AuthContext)\n\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const [checked, setChecked] = useState(false);\n    useEffect(() => {\n        setChecked(true);\n    }, []);\n\n    // logInHandler = () =>{\n    //     return a.href = \"http://localhost:8000/Signup\";\n\n    // }\n    const history = useHistory();\n    console.log(auth)\n    return (\n\n        <>\n            <CssBaseline />\n            <Box sx={{ flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"inherit\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, fontSize: 20, fontFamily: 'Monospace', fontStyle: 'normal', fontWeight: 'Bold' }} color=\"primary\">\n                            Enviar Dinheiro\n                        </Typography>\n                        <IconButton>\n                            <ExpandMore style={{ color: 'green', fontSize: '3rem' }} />\n                        </IconButton>\n                        {/* <Button>\n                            login\n                        </Button>\n                        <Button variant=\"contained\" sx={{ borderRadius: 10 , marginRight: 5}}>\n                            signup\n                        </Button> */}\n\n                        <Stack spacing={2} direction=\"row\" sx={{ marginRight: 5 }}>\n                            {(auth.token === 'null' || auth.token === null) && (<Button onClick={() => { history.push('login') }} variant=\"outlined\" sx={{ borderRadius: 10 }}>Log In</Button>)}\n                            {(auth.token === 'null' || auth.token === null) && (<Button onClick={() => { history.push('register') }} variant=\"contained\" sx={{ borderRadius: 10 }}>Sign Up</Button>)}\n                            {(auth.token !== 'null' && auth.token !== null) && (<Button onClick={() => { history.push('console') }} variant=\"contained\" sx={{ borderRadius: 10 }}>dashboard</Button>)}\n                        </Stack>\n\n\n                    </Toolbar>\n                </AppBar>\n                <Header />\n                <>\n                    <Box sx={{ flexGrow: 1 }}>\n                        <Grid container spacing={3} >\n                            <Grid item xs={7}>\n\n\n                                <Box m=\"auto\" sx={{\n                                    width: \"100%\",\n                                    height: \"60vh\",\n                                    backgroundImage: \"url(\" + \"https://media.istockphoto.com/photos/woman-receiving-digital-money-using-phone-picture-id1289220813?k=20&m=1289220813&s=612x612&w=0&h=ux_RHNcznzzvRHk2t5bWG1lezuk8dXpTVfwOwCmVSPw=\" + \")\",\n                                    backgroundPosition: 'left',\n                                    backgroundSize: 'cover',\n                                    backgroundRepeat: 'no-repeat',\n                                    pl: 5\n\n                                }} />\n\n\n\n                            </Grid>\n\n                            <Grid item xs={5} sx={{ float: 'right', justifyContent: 'center' }}>\n\n                                <Collapse\n                                    in={checked}\n                                    {...(checked ? { timeout: 2000 } : {})}>\n\n\n                                    <Typography variant=\"h4\" color=\"primary\" sx={{ py: 8, flexGrow: 1, color: \"green\", fontSize: 40, fontStyle: 'normal', fontFamily: 'Monospace', fontWeight: 'Bold', justifyContent: 'center', alignItems: 'center' }}>\n                                        Tranfer money to loved ones the easiest way possible\n                                        <nav style={{ paddingTop: 6, fontSize: 20, fontStyle: 'normal', color: 'grey' }}>\n                                            let's go cashless together\n                                        </nav>\n                                    </Typography>\n\n                                </Collapse>\n\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box m=\"auto\" display=\"flex\" sx={{ maxHeight: 700 }} >\n\n                        <Paper elevation={10} sx={{\n                            justifyContent: 'center',\n                            maxHeight: 500,\n                            alignItems: 'center',\n                            width: \"100%\",\n                            height: \"70vh\",\n                            bgcolor: 'white'\n                            // '&:hover': {\n                            //   backgroundColor: 'grey',\n                            //   opacity: [0.9, 0.8, 0.7],\n                            //},\n                        }} >\n\n                            <Typography variant=\"h4\" sx={{ alignItems: 'center', fontSize: 40, px: 50, pt: 6, justifyContent: 'center', flexGrow: 1, marginX: \"auto\" }}>Get started with us today</Typography>\n                            <Box sx={{ px: 70, pt: 5 }} position=\"static\">\n                                <Button onClick={() => { history.push('signup') }} variant=\"outlined\" sx={{ borderRadius: 10, alignItems: 'centre' }}>Get Started</Button>\n                            </Box>\n                            <Typography variant=\"h5\" sx={{ alignItems: 'center', px: 40, pt: 7, justifyContent: 'center', flexGrow: 1, marginX: \"auto\" }}>\n                                Find out why we are the best at securing your money online\n                                <nav style={{ alignItems: 'center', justifyContent: 'center', flexGrow: 1 }}>\n                                    With a very easy guide on how it can be shared with loved ones\n                                </nav>\n                            </Typography>\n\n                            <Box sx={{ px: 65, pt: 6 }} >\n                                <Button variant=\"contained\" sx={{ borderRadius: 10, alignItems: 'centre', px: 5 }}>Learn More</Button>\n                            </Box>\n\n                        </Paper>\n                    </Box>\n                </>\n                <>\n\n                    <Paper sx={{ maxHeight: 700, mx: 10 }}>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={4}>\n                                <Card sx={{ maxWidth: 350 }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            component=\"img\"\n                                            height=\"200\"\n                                            image=\"/images/main.png\"\n                                            alt=\"Another image\"\n                                        />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h6\" component=\"div\" >\n                                                MAKE ONLINE PAYMENTS\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                Pay with us for all your online purchases\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <Card sx={{ maxWidth: 350 }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            component=\"img\"\n                                            height=\"200\"\n                                            image=\"/images/image1.png\"\n                                            alt=\"Another image\"\n                                        />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h6\" component=\"div\" >\n                                                KEEP WITH US\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                Being cashless has never been easier\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <Card sx={{ maxWidth: 350 }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            component=\"img\"\n                                            height=\"200\"\n                                            image=\"/images/image3.png\"\n                                            alt=\"Another image\"\n                                        />\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h6\" component=\"div\" >\n                                                TRANSFER FUNDS\n                                            </Typography>\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                Transfer money to loved ones in an insatnt\n                                            </Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Box>\n        </>\n    );\n}","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Copyright } from '../shared'\nimport { Home, Login, SignUp } from \"./components\"\nimport { CssBaseline } from \"@mui/material\"\nimport RegisterContextProvider from '../../store/context/register';\nfunction Main() {\n    return (\n        <>\n            <CssBaseline />\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <RegisterContextProvider>\n                <Route path=\"/register\" component={SignUp} />\n            </RegisterContextProvider>\n            <Copyright />\n        </>\n    );\n}\nexport default Main;\n","import { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { AuthContext } from './store/context/auth'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport LoggedInComponent from './components/loggedin/main'\nimport LoggedOutComponent from './components/loggedout/main'\nimport { useEffect } from \"react\";\n\n\nconst App = () => {\n  const { auth, authCheckState, getCsrfCookie } = useContext(AuthContext)\n  const themeMui = createTheme({\n    palette: {\n      primary: {\n        main: '#3C9905',\n      },\n    },\n  });\n  useEffect(() => {\n    getCsrfCookie()\n    authCheckState()\n  }, []);\n  return (\n    <Router>\n      <ThemeProvider theme={themeMui}>\n        <Switch>\n          <Route path=\"/console\">\n            {auth.token !== \"null\" ? (\n              <>\n                <LoggedInComponent />\n              </>\n            ) : (\n              <><Redirect to=\"/login\" /></>)\n            }\n          </Route>\n          <Route path=\"/\">\n            <LoggedOutComponent />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Router >\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AuthContextProvider from './store/context/auth'\n// import ThemeContextProvider from './store/context/theme'\nimport { SnackbarProvider } from 'notistack';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* <ThemeContextProvider> */}\n        < AuthContextProvider >\n            <SnackbarProvider maxSnack={5}>\n                <App />\n            </SnackbarProvider>\n        </ AuthContextProvider>\n        {/* </ThemeContextProvider> */}\n    </React.StrictMode>\n    , document.getElementById('root')\n);"],"sourceRoot":""}